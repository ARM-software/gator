<counter_set count="6" name="ARMv8_Cortex_A57_cnt"/>
<category counter_set="ARMv8_Cortex_A57_cnt" name="Cortex-A57" per_cpu="yes" supports_event_based_sampling="yes">
    <event counter="ARMv8_Cortex_A57_ccnt" event="0x11" title="Cycles" name="CPU Cycles" description="The counter increments on every cycle." display="hertz" units="Hz" average_selection="yes" average_cores="yes"/>
    <event event="0x0" title="Instructions (Executed)" name="Increment PMSWINC Register" description="The counter increments on writes to the PMSWINC register." units="instructions"/>
    <event event="0x1" title="L1 Instruction Cache" name="Refill" description="The counter counts each access counted by &apos;L1 Instruction Cache: Access&apos; that causes a demand refill of any of the Level 1 caches outside the Level 1 caches of this PE. A refill includes any access that causes data to be fetched from outside the cache, even if the data is ultimately not allocated into the cache. For example, data might be fetched into a buffer but then discarded, rather than being allocated into a cache. These buffers are treated as part of the cache. If the cache is shared, only events attributable to this PE are counted. If the cache is not shared, all events are counted."/>
    <event event="0x2" title="L1 Instruction TLB" name="Refill" description="The counter counts attributable instruction memory accesses that cause a TLB refill of at least the Level 1 instruction TLB. This includes each Instruction memory access that causes an access to a level of memory system due to a translation table walk or an access to another level of TLB caching."/>
    <event event="0x3" title="L1 Data Cache" name="Refill" description="The counter counts each access counted by &apos;L1 Data Cache: Access&apos; that causes a demand refill of at least the Level 1 data or unified cache from outside the Level 1 cache. Each access to a cache line that causes a new linefill is counted, including those from instructions that generate multiple accesses, such as load or store multiples, and PUSH and POP instructions. In particular, the counter counts accesses to the Level 1 cache that cause a refill that is satisfied by another Level 1 data or unified cache, or a Level 2 cache, or memory. A refill includes any access that causes data to be fetched from outside the cache, even if the data is ultimately not allocated into the cache. For example, data might be fetched into a buffer but then discarded, rather than being allocated into a cache. These buffers are treated as part of the cache."/>
    <event event="0x4" title="L1 Data Cache" name="Access" description="The counter counts each memory read operation or memory write operation that causes a cache access to at least the Level 1 data or unified cache. If the cache is shared, only events attributable to this PE are counted. If the cache is not shared, all events are counted. Each access to a cache line is counted including the multiple accesses of instructions, such as LDM or STM . Each access to other Level 1 data or unified memory structures, for example refill buffers, write buffers, and write-back buffers, is also counted."/>
    <event event="0x5" title="L1 Data TLB" name="Refill" description="The counter counts each attributable memory read operation or attributable memory write operation that causes a TLB refill of at least the Level 1 data or unified TLB. It counts each read or write that causes a refill, in the form of a translation table walk or an access to another level of TLB caching."/>
    <event event="0x8" title="Instructions (Executed)" name="All" description="The counter increments for every architecturally executed instruction." units="instructions"/>
    <event event="0x9" title="Exceptions" name="Taken" description="The counter increments for each exception taken." units="exceptions"/>
    <event event="0xa" title="Instructions (Executed)" name="Exception Returns" description="The counter increments for each executed exception return instruction." units="instructions"/>
    <event event="0xb" title="Instructions (Executed)" name="Write to CONTEXTIDR" description="The counter increments for every write to the CONTEXTIDR." units="instructions"/>
    <event event="0x10" title="Branch Predictor" name="Mispredictions" description="The counter counts each correction to the predicted program flow that occurs because of a misprediction from, or no prediction from, the branch prediction resources and that relates to instructions that the branch prediction resources are capable of predicting."/>
    <event event="0x12" title="Branch Predictor" name="Possible Predictions" description="The counter counts every branch or other change in the program flow that the branch prediction resources are capable of predicting."/>
    <event event="0x13" title="Memory" name="Access" description="The counter counts memory read operations and memory write operations that the PE made. The counter increments whether the access results in an access to a Level 1 data or unified cache, a Level 2 data or unified cache, or neither of these."/>
    <event event="0x14" title="L1 Instruction Cache" name="Access" description="The counter counts attributable instruction memory accesses that access at least the Level 1 instruction or unified cache. Each access to other Level 1 instruction memory structures, such as refill buffers, is also counted."/>
    <event event="0x15" title="L1 Data Cache" name="Write-back" description="The counter counts every write-back of data from the Level 1 data or unified cache. The counter counts each write-back that causes data to be written from the Level 1 cache to outside of the Level 1 cache."/>
    <event event="0x16" title="L2 Data Cache" name="Access" description="The counter counts each memory read operation or memory write operation that causes a cache access to at least the Level 2 data or unified cache. If the cache is shared, only events attributable to this PE are counted. If the cache is not shared, all events are counted."/>
    <event event="0x17" title="L2 Data Cache" name="Refill" description="The counter counts each access counted by &apos;L2 Data Cache: Access&apos; that causes a refill of any of the Level 1 or Level 2 caches from outside the Level 1 and Level 2 caches of the PE. A refill includes any access that causes data to be fetched from outside the cache, even if the data is ultimately not allocated into the cache. For example, data might be fetched into a buffer but then discarded, rather than being allocated into a cache. These buffers are treated as part of the cache."/>
    <event event="0x18" title="L2 Data Cache" name="Write-back" description="The counter counts every write-back of data from the Level 2 data or unified cache that occurs as a result of an operation by this PE. It counts each write-back that causes data to be written from the Level 2 cache to outside the Level 1 and Level 2 caches."/>
    <event event="0x19" title="Bus" name="Access" description="The counter counts memory read operations and memory write operations that access outside of the boundary of the PE and its closely-coupled caches. Where this boundary lies with respect to any implemented caches is IMPLEMENTATION DEFINED."/>
    <event event="0x1a" title="Errors" name="Memory" description="The counter counts every occurrence of a memory error signaled by a memory closely coupled to this PE. The definition of local memories is IMPLEMENTATION DEFINED but includes caches, tightly-coupled memories, and TLB arrays."/>
    <event event="0x1b" title="Instructions (Speculated)" name="All" description="The counter counts instructions that are speculatively executed by the PE. This includes instructions that are subsequently not architecturally executed." units="instructions"/>
    <event event="0x1c" title="Instructions (Executed)" name="Write to TTBR" description="The counter counts writes to the translation table base registers, TTBR0 and TTBR1." units="instructions"/>
    <event event="0x1d" title="Cycles" name="Bus Cycles" description="The counter increments on every cycle of the interface at the boundary of the PE and its closely-coupled caches. Where this boundary lies with respect to any implemented caches is IMPLEMENTATION DEFINED."/>
    <event event="0x40" title="L1 Data Cache" name="Access (due to read)" description="As &apos;L1 Data Cache: Access&apos;, but counts only memory read accesses."/>
    <event event="0x41" title="L1 Data Cache" name="Access (due to write)" description="As &apos;L1 Data Cache: Access&apos;, but counts only memory write accesses."/>
    <event event="0x42" title="L1 Data Cache" name="Refill (due to read)" description="As &apos;L1 Data Cache: Refill&apos;, but counts only memory read accesses."/>
    <event event="0x43" title="L1 Data Cache" name="Refill (due to write)" description="As &apos;L1 Data Cache: Refill&apos;, but counts only memory write accesses."/>
    <event event="0x46" title="L1 Data Cache" name="Write-back (due to reuse)" description="As &apos;L1 Data Cache: Write-back&apos;, but counts only write-backs that are a result of the line being allocated for an access made by the PE."/>
    <event event="0x47" title="L1 Data Cache" name="Write-back (due to clean)" description="As &apos;L1 Data Cache: Write-back&apos;, but counts only write-backs that are a result of a coherency operation made by another PE or are caused by the execution of a cache maintenance instruction. Whether write-backs caused by the execution of a cache maintenance instruction are counted is IMPLEMENTATION DEFINED."/>
    <event event="0x48" title="L1 Data Cache" name="Invalidation" description="The counter counts each invalidation of a cache line in the Level 1 data or unified cache."/>
    <event event="0x4c" title="L1 Data TLB" name="Refill (due to read)" description="As &apos;L1 Data TLB: Refill&apos;, but counts only memory-read operations that cause a data TLB refill of a least the Level 1 data or unified TLB."/>
    <event event="0x4d" title="L1 Data TLB" name="Refill (due to write)" description="As &apos;L1 Data TLB: Refill&apos;, but counts only memory-write operations that cause a data TLB refill of a least the Level 1 data or unified TLB."/>
    <event event="0x50" title="L2 Data Cache" name="Access (due to read)" description="As &apos;L2 Data Cache: Access&apos;, but counts only memory-read operations that access at least the Level 2 data or unified cache."/>
    <event event="0x51" title="L2 Data Cache" name="Access (due to write)" description="As &apos;L2 Data Cache: Access&apos;, but counts only memory-write operations that access at least the Level 2 data or unified cache."/>
    <event event="0x52" title="L2 Data Cache" name="Refill (due to read)" description="As &apos;L2 Data Cache: Refill&apos;, but counts only memory-read operations that cause a refill of at least the Level 2 data or unified cache."/>
    <event event="0x53" title="L2 Data Cache" name="Refill (due to write)" description="As &apos;L2 Data Cache: Refill&apos;, but counts only memory-write operations that cause a refill of at least the Level 2 data or unified cache."/>
    <event event="0x56" title="L2 Data Cache" name="Write-back (due to reuse)" description="As &apos;L2 Data Cache: Write-back&apos;, but counts only write-backs that are a result of the line being allocated for an access made by the PE."/>
    <event event="0x57" title="L2 Data Cache" name="Write-back (due to clean)" description="As &apos;L2 Data Cache: Write-back&apos;, but counts only write-backs that are a result of a coherency operation made by another PE or are caused by the execution of a cache maintenance instruction. Whether write-backs caused by the execution of a cache maintenance instruction are counted as IMPLEMENTATION DEFINED."/>
    <event event="0x58" title="L2 Data Cache" name="Invalidation" description="The counter counts each invalidation of a cache line in the Level 2 data or unified cache."/>
    <event event="0x60" title="Bus" name="Access (due to read)" description="As &apos;Bus: Access&apos;, but counts only memory-read operations that access outside the boundary of the PE and its closely-coupled caches."/>
    <event event="0x61" title="Bus" name="Access (due to write)" description="As &apos;Bus: Access&apos;, but counts only memory-write operations that access outside the boundary of the PE and its closely-coupled caches."/>
    <event event="0x62" title="Bus" name="Access (Normal, Cacheable, Shareable)" description="As &apos;Bus: Access&apos;, but counts only memory-read and memory-write operations that make &quot;Normal, Cacheable, Shareable&quot; accesses outside the boundary of the PE and its closely-coupled caches."/>
    <event event="0x63" title="Bus" name="Access (NOT Normal, Cacheable, Shareable)" description="As &apos;Bus: Access&apos;, but counts only memory-read and memory-write operations that make not &quot;Normal, Cacheable, Shareable&quot; accesses outside the boundary of the PE and its closely-coupled caches."/>
    <event event="0x64" title="Bus" name="Access (Normal)" description="As &apos;Bus: Access&apos;, but counts only memory-read and memory-write operations that make &quot;Normal, Cacheable&quot; and &quot;Normal, Non-cacheable&quot; accesses outside the boundary of the PE and its closely-coupled caches."/>
    <event event="0x65" title="Bus" name="Access (Device)" description="As &apos;Bus: Access&apos;, but counts only memory-read and memory-write operations that make &quot;Device&quot; accesses outside the boundary of the PE and its closely-coupled caches."/>
    <event event="0x66" title="Memory" name="Access (due to read)" description="As &apos;Memory: Access&apos;, but the counter counts only memory-read operations that the PE made."/>
    <event event="0x67" title="Memory" name="Access (due to write)" description="As &apos;Memory: Access&apos;, but the counter counts only memory-write operations that the PE made."/>
    <event event="0x68" title="Memory" name="Access (due to unaligned read)" description="As &apos;Memory: Access&apos;, but the counter counts only unaligned memory-read operations that the PE made. It also counts unaligned accesses if they are subsequently changed into multiple aligned accesses."/>
    <event event="0x69" title="Memory" name="Access (due to unaligned write)" description="As &apos;Memory: Access&apos;, but the counter counts only unaligned memory-write operations that the PE made. It also counts unaligned accesses if they are subsequently changed into multiple aligned accesses."/>
    <event event="0x6a" title="Memory" name="Access (due to unaligned read or write)" description="As &apos;Memory: Access&apos;, but the counter counts only unaligned memory-read and unaligned memory-write operations that the PE made. It also counts unaligned accesses if they are subsequently changed into multiple aligned accesses."/>
    <event event="0x6c" title="Instructions (Speculated)" name="Load-Exclusive" description="The counter counts Load-Exclusive instructions speculatively executed." units="instructions"/>
    <event event="0x6d" title="Instructions (Speculated)" name="Store-Exclusive (Successes)" description="The counter counts Store-Exclusive instructions speculatively executed that completed a write." units="instructions"/>
    <event event="0x6e" title="Instructions (Speculated)" name="Store-Exclusive (Failures)" description="The counter counts Store-Exclusive instructions speculatively executed that fail to complete a write. It is within the IMPLEMENTATION DEFINED definition of speculatively executed whether this includes conditional instructions that fail the condition code check." units="instructions"/>
    <event event="0x70" title="Instructions (Speculated)" name="Load" description="As &apos;Instructions (Speculated): All&apos;, but the counter counts only memory-reading instructions, as defined by the &apos;Instructions (Executed): Load&apos; event." units="instructions"/>
    <event event="0x71" title="Instructions (Speculated)" name="Store" description="As &apos;Instructions (Speculated): All&apos;, but the counter counts only memory-writing instructions, as defined by the &apos;Instructions (Executed): Store&apos; event." units="instructions"/>
    <event event="0x72" title="Instructions (Speculated)" name="Load/Store" description="As &apos;Instructions (Speculated): All&apos;, but the counter counts only memory-reading and memory-writing instructions, as defined by the &apos;Instructions (Executed): Load&apos; and &apos;Instructions (Executed): Store&apos; events." units="instructions"/>
    <event event="0x73" title="Instructions (Speculated)" name="Data Processing (Integer)" description="As &apos;Instructions (Speculated): All&apos;, but the counter counts only integer data-processing instructions." units="instructions"/>
    <event event="0x74" title="Instructions (Speculated)" name="Data Processing (Advanced SIMD)" description="As &apos;Instructions (Speculated): All&apos;, but the counter counts only Advanced SIMD data-processing instructions." units="instructions"/>
    <event event="0x75" title="Instructions (Speculated)" name="Data Processing (Floating-point)" description="As &apos;Instructions (Speculated): All&apos;, but the counter counts only floating-point data-processing instructions." units="instructions"/>
    <event event="0x76" title="Instructions (Speculated)" name="Branch (software PC writes)" description="As &apos;Instructions (Speculated): All&apos;, but the counter counts only software changes of the PC." units="instructions"/>
    <event event="0x77" title="Instructions (Speculated)" name="Crypto" description="As &apos;Instructions (Speculated): All&apos;, but the counter counts only Cryptographic instructions, except PMULL and VMULL." units="instructions"/>
    <event event="0x78" title="Instructions (Speculated)" name="Branch (immediate)" description="The counter counts immediate branch instructions speculatively executed." units="instructions"/>
    <event event="0x79" title="Instructions (Speculated)" name="Branch (return)" description="The counter counts procedure return instructions speculatively executed." units="instructions"/>
    <event event="0x7a" title="Instructions (Speculated)" name="Branch (indirect)" description="The counter counts indirect branch instructions speculatively executed. This includes software change of the PC other than exception-generating instructions and immediate branch instructions." units="instructions"/>
    <event event="0x7c" title="Instructions (Speculated)" name="Barrier (ISB)" description="The counter counts Instruction Synchronization Barrier instructions speculatively executed, including CP15ISB." units="instructions"/>
    <event event="0x7d" title="Instructions (Speculated)" name="Barrier (DSB)" description="The counter counts data synchronization barrier instructions speculatively executed, including CP15DSB." units="instructions"/>
    <event event="0x7e" title="Instructions (Speculated)" name="Barrier (DMB)" description="The counter counts data memory barrier instructions speculatively executed, including CP15DSB. It does not include the implied barrier operations of load/store operations with release consistency semantics." units="instructions"/>
    <event event="0x81" title="Exceptions" name="Undefined" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions taken locally that are not counted by &apos;Exceptions: SVC&apos;, &apos;Exceptions: SMC&apos;, &apos;Exceptions: HVC&apos;, &apos;Exceptions: Instruction Abort&apos;, &apos;Exceptions: Data Abort&apos;, &apos;Exceptions: IRQ&apos;, and &apos;Exceptions: FIQ&apos;." units="exceptions"/>
    <event event="0x82" title="Exceptions" name="SVC" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions taken locally that are Supervisor Call exceptions." units="exceptions"/>
    <event event="0x83" title="Exceptions" name="Instruction Abort" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions taken locally that are Instruction Abort exceptions." units="exceptions"/>
    <event event="0x84" title="Exceptions" name="Data Abort" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions taken locally that are Data Abort or SError interrupt exceptions." units="exceptions"/>
    <event event="0x86" title="Exceptions" name="IRQ" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions taken locally that are IRQ or Virtual IRQ exceptions." units="exceptions"/>
    <event event="0x87" title="Exceptions" name="FIQ" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions taken locally that are FIQ or Virtual FIQ exceptions." units="exceptions"/>
    <event event="0x88" title="Exceptions" name="SMC" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions that are Secure Monitor Call exceptions excluding those that are trapped as Hyp Trap exceptions." units="exceptions"/>
    <event event="0x8a" title="Exceptions" name="HVC" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions that are Hypervisor Call exceptions including both those taken locally and from non-secure EL1/PL1." units="exceptions"/>
    <event event="0x8b" title="Exceptions" name="Trap (Instruction Abort)" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions not taken locally that are Instruction Abort exceptions." units="exceptions"/>
    <event event="0x8c" title="Exceptions" name="Trap (Data Abort)" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions not taken locally that are Data Abort or SError interrupt exceptions." units="exceptions"/>
    <event event="0x8d" title="Exceptions" name="Trap (Other)" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions taken locally that are not counted by &apos;Exceptions: SMC&apos;, &apos;Exceptions: HVC&apos;, &apos;Exceptions: Trap (Instruction Abort)&apos;, &apos;Exceptions: Trap (Data Abort)&apos;, &apos;Exceptions: Trap (IRQ)&apos;, and &apos;Exceptions: Trap (FIQ)&apos;." units="exceptions"/>
    <event event="0x8e" title="Exceptions" name="Trap (IRQ)" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions not taken locally that are IRQ exceptions." units="exceptions"/>
    <event event="0x8f" title="Exceptions" name="Trap (FIQ)" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions not taken locally that are FIQ exceptions." units="exceptions"/>
    <event event="0x90" title="Instructions (Speculated)" name="Load (Acquire)" description="The counter counts memory-read operations with acquire or acquirepc semantics that are speculatively executed." units="instructions"/>
    <event event="0x91" title="Instructions (Speculated)" name="Store (Release)" description="The counter counts memory-write operations with release semantics that are speculatively executed." units="instructions"/>
</category>
