<!-- Copyright (C) 2024 by Arm Limited. All rights reserved. -->

<counter_set count="6" name="ARMv9_Neoverse_V3_cnt"/>
<category counter_set="ARMv9_Neoverse_V3_cnt" name="Neoverse-V3" per_cpu="yes" supports_event_based_sampling="yes">
    <event counter="ARMv9_Neoverse_V3_ccnt" event="0x11" title="Cycles" name="CPU Cycles" description="The counter increments on every cycle" units="cycles"/>
    <event event="0x00" title="Instructions (Executed)" name="Increment PMSWINC Register" description="The counter increments on writes to the PMSWINC register" units="instructions"/>
    <event event="0x01" title="L1 Instruction Cache" name="Refill" description="Counts any instruction fetch which misses in the cache. This does not count; cache maintenance instructions and non-cacheable accesses."/>
    <event event="0x02" title="L1 Instruction TLB" name="Refill" description="This event counts any refill of the L1 instruction TLB from the MMU Translation Cache (MMUTC). This includes refills that result in a translation fault. TLB maintenance instructions are not counted. This event counts regardless of whether the MMU is enabled."/>
    <event event="0x03" title="L1 Data Cache" name="Refill" description="This event counts any load or store operation or translation table walk access which causes data to be read from outside the L1, including accesses which do not allocate into L1. The following instructions are not counted; Cache maintenance instructions and prefetches, Stores of an entire cache line, even if they make a coherency request outside the L1, Partial cache line writes which do not allocate into the L1 cache and Non-cacheable accesses. This event counts the sum of &apos;L1 Data Cache: Refill (due to read)&apos; and &apos;L1 Data Cache: Refill (due to write)&apos;."/>
    <event event="0x04" title="L1 Data Cache" name="Access" description="This event counts any load or store operation or translation table walk access which looks up in the L1 data cache. In particular, any access which could count the &apos;L1 Data Cache: Refill&apos; event causes this event to count. The following instructions are not counted; Cache maintenance instructions and prefetches and Non-cacheable accesses. This event counts the sum of &apos;L1 Data Cache: Access (due to read)&apos; and &apos;L1 Data Cache: Access (due to write)&apos;."/>
    <event event="0x05" title="L1 Data TLB" name="Refill" description="This event counts any refill of the data L1 TLB from the MMUTC. This includes refills that result in a translation fault. TLB maintenance instructions are not counted. This event counts regardless of whether the MMU is enabled."/>
    <event event="0x08" title="Instructions (Executed)" name="All" description="The counter increments for every architecturally executed instruction" units="instructions"/>
    <event event="0x09" title="Exceptions" name="Taken" description="The counter increments for each exception taken" units="exceptions"/>
    <event event="0x0a" title="Instructions (Executed)" name="Exception Returns" description="The counter increments for each executed exception return instruction" units="instructions"/>
    <event event="0x0b" title="Instructions (Executed)" name="Write to CONTEXTIDR" description="The counter increments for every write to the CONTEXTIDR" units="instructions"/>
    <event event="0x0c" title="Instructions (Executed)" name="Write to PC" description="The counter increments for every software change of the PC. This includes all: Branch instructions, memory reading instructions that explicitly write to the PC, Data processing instructions that explicitly write to the PC, and Exception return instructions." units="instructions"/>
    <event event="0x0d" title="Instructions (Executed)" name="Branch (Immediate)" description="The counter counts all immediate branch instructions that are architecturally executed" units="instructions"/>
    <event event="0x0e" title="Instructions (Executed)" name="Branch (Return)" description="The counter counts all procedure return instructions that are architecturally executed" units="instructions"/>
    <event event="0x10" title="Branch Predictor" name="Mispredictions" description="The counter counts each correction to the predicted program flow that occurs because of a misprediction from, or no prediction from, a change in control flow that the branch prediction resources are capable of predicting"/>
    <event event="0x12" title="Branch Predictor" name="Possible Predictions" description="The counter counts every branch or other change in the program flow that the branch prediction resources are capable of predicting"/>
    <event event="0x13" title="Memory" name="Access" description="This event counts memory accesses due to load or store instructions. The following instructions are not counted; Instruction fetches, Cache maintenance instructions, Translation table walks or prefetches. This event counts the sum of &apos;Memory: Access (due to read)&apos; and &apos;Memory: Access (due to write)&apos;."/>
    <event event="0x14" title="L1 Instruction Cache" name="Access" description="This event counts any instruction fetch which accesses the L1 instruction cache or MOP cache. The following instructions are not counted; cache maintenance instructions, non-cacheable accesses."/>
    <event event="0x15" title="L1 Data Cache" name="Write-back" description="The counter counts every write-back of data from the Level 1 data or unified cache. The counter counts each write-back that causes data to be written from the Level 1 cache to outside of the Level 1 cache."/>
    <event event="0x16" title="L2 Data Cache" name="Access" description="This event counts any transaction from L1 which looks up in the L2 cache, and any writeback from the L1 to the L2. Snoops from outside the core and cache maintenance operations are not counted."/>
    <event event="0x17" title="L2 Data Cache" name="Refill" description="This event counts any cacheable transaction from L1 which causes data to be read from outside the core. L2 refills caused by stashes into L2 are not counted."/>
    <event event="0x18" title="L2 Data Cache" name="Write-back" description="This event counts any write-back of data from the L2 cache to outside the core. This includes snoops to the L2 which return data, regardless of whether they cause an invalidation. Invalidations from the L2 which do not write data outside of the core and snoops which return data from the L1 are not counted."/>
    <event event="0x19" title="Bus" name="Access" description="This event counts for every beat of data transferred over the data channels between the core and the Snoop Control Unit (SCU). If both read and write data beats are transferred on a given cycle, this event is counted twice on that cycle. This event counts the sum of &apos;Bus: Access (due to read)&apos;, &apos;Bus: Access (due to write)&apos;, and any snoop data responses."/>
    <event event="0x1a" title="Errors" name="Memory" description="Local memory error This event counts any correctable or uncorrectable memory error (ECC or parity) in the protected core RAMs"/>
    <event event="0x1b" title="Instructions (Speculated)" name="All" description="Operation speculatively executed" units="instructions"/>
    <event event="0x1c" title="Instructions (Executed)" name="Write to TTBR" description="The counter counts writes to the translation table base registers, TTBR0 and TTBR1" units="instructions"/>
    <event event="0x1d" title="Cycles" name="Bus Cycles" description="Bus cycles This event duplicates &apos;Cycles: CPU Cycles&apos;" units="cycles"/>
    <event event="0x21" title="Instructions (Executed)" name="Branch (Any)" description="Instruction architecturally executed, branch This event counts all branches, taken or not. This excludes exception entries, debug entries and CCFAIL branches." units="instructions"/>
    <event event="0x22" title="Instructions (Executed)" name="Branch (Mispredicted)" description="Instruction architecturally executed, mispredicted branch This event counts any branch counted by &apos;Instructions (Executed): Branch (Any)&apos; which is not correctly predicted and causes a pipeline flush" units="instructions"/>
    <event event="0x23" title="Stalls" name="Frontend" description="No operation issued because of the frontend. The counter counts on any cycle when there are no fetched instructions available to dispatch." units="cycles"/>
    <event event="0x24" title="Stalls" name="Backend" description="No operation issued because of the backend The counter counts on any cycle fetched instructions are not dispatched due to resource constraints" units="cycles"/>
    <event event="0x25" title="L1 Data TLB" name="Access" description="Level 1 data TLB access This event counts any load or store operation which accesses the data L1 TLB. If both a load and a store are executed on a cycle, this event counts twice. This event counts regardless of whether the MMU is enabled."/>
    <event event="0x26" title="L1 Instruction TLB" name="Access" description="Level 1 instruction TLB access This event counts any instruction fetch which accesses the instruction L1 TLB. This event counts regardless of whether the MMU is enabled."/>
    <event event="0x2d" title="L2 Data TLB" name="Refill" description="Attributable L2 TLB refill This event counts on any refill of the MMUTC, caused by either an instruction or data access. This event does not count if the MMU is disabled."/>
    <event event="0x2f" title="L2 Data TLB" name="Access" description="Attributable L2 TLB access This event counts on any access to the MMUTC (caused by a refill of any of the L1 TLBs). This event does not count if the MMU is disabled."/>
    <event event="0x31" title="Multi-socket Remote Access" name="Access" description="Access to another socket in a multi-socket system"/>
    <event event="0x34" title="Data TLB" name="Translation table walk" description="Access to data TLB that caused a page table walk This event counts on any data access which causes &apos;L2 Data TLB: Refill&apos; to count"/>
    <event event="0x35" title="Instruction TLB" name="Translation table walk" description="Access to instruction TLB that caused a translation table walk. This event counts on any instruction access which causes &apos;L2 Data TLB: Refill&apos; to count."/>
    <event event="0x36" title="Last Level Cache" name="Access (due to read)" description="Last level cache access, read If CPUECTLR. EXTLLC is set, then this event counts any cacheable read transaction which returns a data source of interconnect cache. If CPUECTLR. EXTLLC is not set, then this event is a duplicate of the L*D_CACHE_RD event corresponding to the last level of cache implemented &apos;L2 Data Cache: Access (due to read)&apos; if only one is implemented, or &apos;L1 Data Cache: Access (due to read)&apos; if neither is implemented."/>
    <event event="0x37" title="Last Level Cache" name="Miss (due to read)" description="Last level cache miss, read If CPUECTLR. EXTLLC is set, then this event counts any cacheable read transaction which returns a data source of DRAM, remote, or inter-cluster peer. If CPUECTLR. EXTLLC is not set, then this event is a duplicate of the L*D_CACHE_REFILL_RD event corresponding to the last level of cache implemented &apos;L2 Data Cache: Refill (due to read)&apos; if only one is implemented, or &apos;L1 Data Cache: Refill (due to read)&apos; if neither is implemented."/>
    <event event="0x39" title="L1 Data Cache" name="Miss (due to long-latency read)" description="Level 1 data cache long-latency miss"/>
    <event event="0x3a" title="Operations" name="Executed" description="Micro-operation architecturally executed"/>
    <event event="0x3b" title="Operations" name="Speculated" description="Micro-operation speculatively executed"/>
    <event event="0x3c" title="Stalls" name="All" description="No operation sent for execution"/>
    <event event="0x3d" title="Stalls (Slots)" name="Backend" description="No operation sent for execution on a slot due to the backend" units="slots"/>
    <event event="0x3e" title="Stalls (Slots)" name="Frontend" description="No operation sent for execution on a slot due to the frontend" units="slots"/>
    <event event="0x3f" title="Stalls (Slots)" name="All" description="No operation sent for execution on a slot" units="slots"/>
    <event event="0x40" title="L1 Data Cache" name="Access (due to read)" description="This event counts any load operation or page table walk access which looks up in the L1 data cache. In particular, any access which could count the &apos;L1 Data Cache: Refill (due to read)&apos; event causes this event to count. The following instructions are not counted; cache maintenance instructions and prefetches, non-cacheable accesses."/>
    <event event="0x41" title="L1 Data Cache" name="Access (due to write)" description="This event counts any store operation which looks up in the L1 data cache. In particular, any access which could count the &apos;L1 Data Cache: Refill (due to write)&apos; event causes this event to count. The following instructions are not counted; cache maintenance instructions and prefetches, non-cacheable accesses."/>
    <event event="0x42" title="L1 Data Cache" name="Refill (due to read)" description="This event counts any load operation or page table walk access which causes data to be read from outside the L1, including accesses which do not allocate into L1. The following instructions are not counted; xache maintenance instructions and prefetches, non-cacheable accesses."/>
    <event event="0x43" title="L1 Data Cache" name="Refill (due to write)" description="This event counts any store operation which causes data to be read from outside the L1, including accesses which do not allocate into L1. The following instructions are not counted; cache maintenance instructions and prefetches, stores of an entire cache line, even if they make a coherency request outside the L1, partial cache line writes which do not allocate into the L1 cache, non-cacheable accesses."/>
    <event event="0x44" title="L1 Data Cache" name="Refill (from inside cluster)" description="As &apos;L1 Data Cache: Refill&apos;, but counts only memory operations that generate refills satisfied by transfer from another cache inside of the immediate cluster"/>
    <event event="0x45" title="L1 Data Cache" name="Refill (from outside cluster)" description="As &apos;L1 Data Cache: Refill&apos;, but counts only memory operations that generate refills satisfied by transfer from another cache outside of the immediate cluster"/>
    <event event="0x46" title="L1 Data Cache" name="Write-back (due to reuse)" description="L1 data cache write-back, victim"/>
    <event event="0x47" title="L1 Data Cache" name="Write-back (due to clean)" description="L1 data cache write-back cleaning and coherency"/>
    <event event="0x48" title="L1 Data Cache" name="Invalidation" description="The counter counts each invalidation of a cache line in the Level 1 data or unified cache"/>
    <event event="0x4c" title="L1 Data TLB" name="Refill (due to read)" description="L1 data TLB refill, read"/>
    <event event="0x4d" title="L1 Data TLB" name="Refill (due to write)" description="L1 data TLB refill, write"/>
    <event event="0x4e" title="L1 Data TLB" name="Access (due to read)" description="L1 data TLB access, read"/>
    <event event="0x4f" title="L1 Data TLB" name="Access (due to write)" description="L1 data TLB access, write"/>
    <event event="0x50" title="L2 Data Cache" name="Access (due to read)" description="L2 cache access, read. This event counts any read transaction from L1 which looks up in the L2 cache. Snoops from outside the core are not counted."/>
    <event event="0x51" title="L2 Data Cache" name="Access (due to write)" description="L2 cache access, write. This event counts any write transaction from L1 which looks up in the L2 cache or any write-back from L1 which allocates into the L2 cache. Snoops from outside the core are not counted."/>
    <event event="0x52" title="L2 Data Cache" name="Refill (due to read)" description="This event counts any cacheable read transaction from L1 which causes data to be read from outside the core. L2 refills caused by stashes into L2 should not be counted. Transactions such as ReadUnique are counted as read transactions, even though they can be generated by store instructions."/>
    <event event="0x53" title="L2 Data Cache" name="Refill (due to write)" description="This event counts any write transaction from L1 which causes data to be read from outside the core. L2 refills caused by stashes into L2 should not be counted. Transactions such as ReadUnique are not counted as write transactions."/>
    <event event="0x56" title="L2 Data Cache" name="Write-back (due to reuse)" description="L2 cache write-back, victim"/>
    <event event="0x57" title="L2 Data Cache" name="Write-back (due to clean)" description="L2 cache write-back, cleaning and coherency"/>
    <event event="0x58" title="L2 Data Cache" name="Invalidation" description="The counter counts each invalidation of a cache line in the Level 2 data or unified cache"/>
    <event event="0x5c" title="L2 Data TLB" name="Refill (due to read)" description="L2 TLB refill, read"/>
    <event event="0x5d" title="L2 Data TLB" name="Refill (due to write)" description="L2 TLB refill, write"/>
    <event event="0x5e" title="L2 Data TLB" name="Access (due to read)" description="L2 TLB access, read"/>
    <event event="0x5f" title="L2 Data TLB" name="Access (due to write)" description="L2 TLB access, write"/>
    <event event="0x60" title="Bus" name="Access (due to read)" description="This event counts for every beat of data transferred over the read data channel between the core and the SCU"/>
    <event event="0x61" title="Bus" name="Access (due to write)" description="Bus access write This event counts for every beat of data transferred over the write data channel between the core and the SCU"/>
    <event event="0x66" title="Memory" name="Access (due to read)" description="This event counts memory accesses due to load instructions. The following instructions are not counted; instruction fetches, cache maintenance instructions, translation table walks, prefetches."/>
    <event event="0x67" title="Memory" name="Access (due to write)" description="This event counts memory accesses due to store instructions. The following instructions are not counted; instruction fetches, cache maintenance instructions, translation table walks, prefetches."/>
    <event event="0x68" title="Memory" name="Access (due to unaligned read)" description="Unaligned access, read"/>
    <event event="0x69" title="Memory" name="Access (due to unaligned write)" description="Unaligned access, write"/>
    <event event="0x6a" title="Memory" name="Access (due to unaligned read or write)" description="Unaligned access"/>
    <event event="0x6c" title="Instructions (Speculated)" name="Load-Exclusive" description="The counter counts Load-Exclusive instructions speculatively executed" units="instructions"/>
    <event event="0x6d" title="Instructions (Speculated)" name="Store-Exclusive (Successes)" description="The counter counts Store-Exclusive instructions speculatively executed that completed a write" units="instructions"/>
    <event event="0x6e" title="Instructions (Speculated)" name="Store-Exclusive (Failures)" description="The counter counts Store-Exclusive instructions speculatively executed that fail to complete a write. It is within the IMPLEMENTATION DEFINED definition of speculatively executed whether this includes conditional instructions that fail the condition code check." units="instructions"/>
    <event event="0x6f" title="Instructions (Speculated)" name="Store-Exclusive" description="The counter counts Store-Exclusive instructions speculatively executed" units="instructions"/>
    <event event="0x70" title="Instructions (Speculated)" name="Load" description="As &apos;Instructions (Speculated): All&apos;, but the counter counts only memory-reading instructions, as defined by the &apos;Instructions (Executed): Load&apos; event" units="instructions"/>
    <event event="0x71" title="Instructions (Speculated)" name="Store" description="As &apos;Instructions (Speculated): All&apos;, but the counter counts only memory-writing instructions, as defined by the &apos;Instructions (Executed): Store&apos; event" units="instructions"/>
    <event event="0x72" title="Instructions (Speculated)" name="Load/Store" description="As &apos;Instructions (Speculated): All&apos;, but the counter counts only memory-reading and memory-writing instructions, as defined by the &apos;Instructions (Executed): Load&apos; and &apos;Instructions (Executed): Store&apos; events" units="instructions"/>
    <event event="0x73" title="Instructions (Speculated)" name="Data Processing (Integer)" description="As &apos;Instructions (Speculated): All&apos;, but the counter counts only integer data-processing instructions" units="instructions"/>
    <event event="0x74" title="Instructions (Speculated)" name="Data Processing (Advanced SIMD)" description="As &apos;Instructions (Speculated): All&apos;, but the counter counts only Advanced SIMD data-processing instructions" units="instructions"/>
    <event event="0x75" title="Instructions (Speculated)" name="Data Processing (Floating-point)" description="As &apos;Instructions (Speculated): All&apos;, but the counter counts only floating-point data-processing instructions" units="instructions"/>
    <event event="0x76" title="Instructions (Speculated)" name="Branch (software PC writes)" description="As &apos;Instructions (Speculated): All&apos;, but the counter counts only software changes of the PC" units="instructions"/>
    <event event="0x77" title="Instructions (Speculated)" name="Crypto" description="As &apos;Instructions (Speculated): All&apos;, but the counter counts only Cryptographic instructions, except PMULL and VMULL" units="instructions"/>
    <event event="0x78" title="Instructions (Speculated)" name="Branch (immediate)" description="The counter counts immediate branch instructions speculatively executed" units="instructions"/>
    <event event="0x79" title="Instructions (Speculated)" name="Branch (return)" description="The counter counts procedure return instructions speculatively executed" units="instructions"/>
    <event event="0x7a" title="Instructions (Speculated)" name="Branch (indirect)" description="The counter counts indirect branch instructions speculatively executed. This includes software change of the PC other than exception-generating instructions and immediate branch instructions." units="instructions"/>
    <event event="0x7c" title="Instructions (Speculated)" name="Barrier (ISB)" description="The counter counts Instruction Synchronization Barrier instructions speculatively executed, including CP15ISB" units="instructions"/>
    <event event="0x7d" title="Instructions (Speculated)" name="Barrier (DSB)" description="The counter counts data synchronization barrier instructions speculatively executed, including CP15DSB" units="instructions"/>
    <event event="0x7e" title="Instructions (Speculated)" name="Barrier (DMB)" description="The counter counts data memory barrier instructions speculatively executed, including CP15DSB. It does not include the implied barrier operations of load/store operations with release consistency semantics." units="instructions"/>
    <event event="0x7f" title="Instructions (Speculated)" name="Barrier (CSDB)" description="The counter counts control speculation barrier instructions speculatively executed" units="instructions"/>
    <event event="0x81" title="Exceptions" name="Undefined" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions taken locally that are not counted by &apos;Exceptions: SVC&apos;, &apos;Exceptions: SMC&apos;, &apos;Exceptions: HVC&apos;, &apos;Exceptions: Instruction Abort&apos;, &apos;Exceptions: Data Abort&apos;, &apos;Exceptions: IRQ&apos;, and &apos;Exceptions: FIQ&apos;" units="exceptions"/>
    <event event="0x82" title="Exceptions" name="SVC" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions taken locally that are Supervisor Call exceptions" units="exceptions"/>
    <event event="0x83" title="Exceptions" name="Instruction Abort" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions taken locally that are Instruction Abort exceptions" units="exceptions"/>
    <event event="0x84" title="Exceptions" name="Data Abort" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions taken locally that are Data Abort or SError interrupt exceptions" units="exceptions"/>
    <event event="0x86" title="Exceptions" name="IRQ" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions taken locally that are IRQ or Virtual IRQ exceptions" units="exceptions"/>
    <event event="0x87" title="Exceptions" name="FIQ" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions taken locally that are FIQ or Virtual FIQ exceptions" units="exceptions"/>
    <event event="0x88" title="Exceptions" name="SMC" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions that are Secure Monitor Call exceptions excluding those that are trapped as Hyp Trap exceptions" units="exceptions"/>
    <event event="0x8a" title="Exceptions" name="HVC" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions that are Hypervisor Call exceptions including both those taken locally and from non-secure EL1/PL1" units="exceptions"/>
    <event event="0x8b" title="Exceptions" name="Trap (Instruction Abort)" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions not taken locally that are Instruction Abort exceptions" units="exceptions"/>
    <event event="0x8c" title="Exceptions" name="Trap (Data Abort)" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions not taken locally that are Data Abort or SError interrupt exceptions" units="exceptions"/>
    <event event="0x8d" title="Exceptions" name="Trap (Other)" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions taken locally that are not counted by &apos;Exceptions: SMC&apos;, &apos;Exceptions: HVC&apos;, &apos;Exceptions: Trap (Instruction Abort)&apos;, &apos;Exceptions: Trap (Data Abort)&apos;, &apos;Exceptions: Trap (IRQ)&apos;, and &apos;Exceptions: Trap (FIQ)&apos;" units="exceptions"/>
    <event event="0x8e" title="Exceptions" name="Trap (IRQ)" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions not taken locally that are IRQ exceptions" units="exceptions"/>
    <event event="0x8f" title="Exceptions" name="Trap (FIQ)" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions not taken locally that are FIQ exceptions" units="exceptions"/>
    <event event="0x90" title="Instructions (Speculated)" name="Load (Acquire)" description="The counter counts memory-read operations with acquire or acquirepc semantics that are speculatively executed" units="instructions"/>
    <event event="0x91" title="Instructions (Speculated)" name="Store (Release)" description="The counter counts memory-write operations with release semantics that are speculatively executed" units="instructions"/>
    <event event="0x4000" title="Statistical Profiling" name="Sample Population" description="The counter counts each operation that might be sampled, whether or not the operation was sampled. Operations that are executed at an Exception level or Security state in which the Statistical Profiling Extension is disabled are not counted."/>
    <event event="0x4001" title="Statistical Profiling" name="Sample Feed" description="The counter counts each time the sample interval counter reaches zero and is reloaded, and the sample does not collide with the previous sample. Samples that are removed by filtering, or discarded, and not written to the Profiling Buffer are counted."/>
    <event event="0x4002" title="Statistical Profiling" name="Sample Filtered" description="The counter counts each sample counted by &apos;Statistical Profiling: Sample Feed&apos; that is not removed by filtering. Sample records that are not removed by filtering, but are discarded before being written to the Profiling Buffer because of a Profiling Buffer management event or because Discard mode is implemented and enabled, are counted."/>
    <event event="0x4003" title="Statistical Profiling" name="Sample Collision" description="The counter counts each time the sample interval counter reaches zero and is reloaded, and the sample collides with the previous sample because the previous sampled operation has not completed generating its sample record"/>
    <event event="0x4004" title="Cycles" name="AMU Constant Cycles" description="Constant frequency cycles" units="cycles"/>
    <event event="0x4005" title="Stalls" name="Backend (Memory Stall Cycles)" description="No operation sent due to the backend and memory stalls" units="cycles"/>
    <event event="0x4006" title="L1 Instruction Cache" name="Miss (long-latency)" description="L1 instruction cache long latency miss"/>
    <event event="0x4009" title="L2 Data Cache" name="Miss (due to long-latency read)" description="L2 cache long latency miss"/>
    <event event="0x4020" title="Latency" name="Access with additional latency from alignment" description="Access with additional latency from alignment" units="accesses"/>
    <event event="0x4021" title="Latency" name="Load with additional latency from alignment" description="Load with additional latency from alignment" units="accesses"/>
    <event event="0x4022" title="Latency" name="Store with additional latency from alignment" description="Store with additional latency from alignment" units="accesses"/>
    <event event="0x4024" title="MTE" name="Checked data memory access" description="Checked data memory access" units="accesses"/>
    <event event="0x4025" title="MTE" name="Checked data memory access, read" description="Checked data memory access, read" units="accesses"/>
    <event event="0x4026" title="MTE" name="Checked data memory access, write" description="Checked data memory access, write" units="accesses"/>
    <event event="0x8004" title="Instructions (Speculated)" name="SVE and Advanced SIMD (SIMD only)" description="The counter counts each Speculatively executed operation due to either: • An SVE instruction that is not a non-SIMD SVE instruction. • An A64 Advanced SIMD instruction that is not an Advanced SIMD scalar instruction." units="instructions"/>
    <event event="0x8005" title="Instructions (Speculated)" name="Advanced SIMD" description="Advanced SIMD operations speculatively executed" units="instructions"/>
    <event event="0x8006" title="Instructions (Speculated)" name="SVE" description="SVE operations speculatively executed" units="instructions"/>
    <event event="0x8014" title="Instructions (Speculated)" name="Floating Point, Half-Precision (all)" description="Half-precision floating-point operation speculatively executed" units="instructions"/>
    <event event="0x8018" title="Instructions (Speculated)" name="Floating Point, Single-Precision (all)" description="Single-precision floating-point operation speculatively executed" units="instructions"/>
    <event event="0x801c" title="Instructions (Speculated)" name="Floating Point, Double-Precision (all)" description="Double-precision floating-point operation speculatively executed" units="instructions"/>
    <event event="0x8040" title="Instructions (Speculated)" name="Integer (all)" description="The counter counts each speculatively executed integer arithmetic operation due to an A64 scalar, Advanced SIMD, and SVE data-processing instruction listed in SVE integer instructions" units="instructions"/>
    <event event="0x8074" title="Instructions (Speculated)" name="SVE (Predicated)" description="SVE predicated operations speculatively executed" units="instructions"/>
    <event event="0x8075" title="Instructions (Speculated)" name="SVE (No Active Predicates)" description="SVE predicated operations with no active predicates speculatively executed" units="instructions"/>
    <event event="0x8076" title="Instructions (Speculated)" name="SVE (All Active Predicates)" description="SVE predicated operations speculatively executed with all active predicates" units="instructions"/>
    <event event="0x8077" title="Instructions (Speculated)" name="SVE (Partially Active Predicates)" description="SVE predicated operations speculatively executed with partially active predicates" units="instructions"/>
    <event event="0x8079" title="Instructions (Speculated)" name="SVE (No / Partially Active Predicates)" description="SVE predicated operations speculatively executed with a Governing predicate in which at least one element is FALSE" units="instructions"/>
    <event event="0x8087" title="Instructions (Speculated)" name="Prefetch (all)" description="The counter counts each speculatively executed operation that prefetches memory due to any of the following A64 instructions: Scalar: PRFM. SVE: PRFB, PRFD, PRFH, or PRFW." units="instructions"/>
    <event event="0x80bc" title="Instructions (Speculated)" name="SVE (Load, First-fault)" description="SVE First-fault load operations speculatively executed" units="instructions"/>
    <event event="0x80bd" title="Instructions (Speculated)" name="SVE (Load, First-fault, Write 0 to FFR)" description="SVE First-fault load operations speculatively executed which set FFR bit to 0" units="instructions"/>
    <event event="0x80c0" title="ALU Operations" name="Floating Point (SVE)" description="Scalable floating-point element operations speculatively executed" units="instructions"/>
    <event event="0x80c1" title="ALU Operations" name="Floating Point (FP / ASIMD / Non-vector)" description="Non-scalable floating-point element operations speculatively executed" units="instructions"/>
    <event event="0x80e3" title="Instructions (Speculated)" name="Integer, 8-bit (Advanced SIMD and SVE)" description="Operation counted by ASE_SVE_INT_SPEC where the largest type is 8-bit integer" units="instructions"/>
    <event event="0x80e7" title="Instructions (Speculated)" name="Integer, 16-bit (Advanced SIMD and SVE)" description="Operation counted by ASE_SVE_INT_SPEC where the largest type is 16-bit integer" units="instructions"/>
    <event event="0x80eb" title="Instructions (Speculated)" name="Integer, 32-bit (Advanced SIMD and SVE)" description="Operation counted by ASE_SVE_INT_SPEC where the largest type is 32-bit integer" units="instructions"/>
    <event event="0x80ef" title="Instructions (Speculated)" name="Integer, 64-bit (Advanced SIMD and SVE)" description="The counter counts each operation counted by ASE_SVE_INT_SPEC where the largest type is an 64-bit integer" units="instructions"/>
    <event event="0x8108" title="Instructions (Executed)" name="Branch (immediate branch taken)" description="The counter counts each instruction counted by both &apos;Instructions (Executed): Branch (Immediate)&apos; and &apos;Instructions (Executed): Write to PC&apos;. These are all direct branch instructions on the architecturally executed path, where the branch is taken." units="instructions"/>
    <event event="0x810c" title="Instructions (Executed)" name="Branch (indirect branch taken excluding returns)" description="The counter counts each instruction counted by both &apos;Instructions (Executed): Branch (indirect branch)&apos; and &apos;Instructions (Executed): Write to PC&apos;, that is not counted by &apos;Instructions (Executed): Branch (Return)&apos;. These are all indirect branch instructions, excluding return instructions, on the architecturally executed path, where the branch is taken." units="instructions"/>
    <event event="0x8110" title="Instructions (Executed)" name="Branch (predicted immediate branch)" description="The counter counts each instruction counted by both &apos;Instructions (Executed): Branch (Immediate)&apos; and &apos;Instructions (Executed): Branch (predicted branch)&apos;. These are all direct branch instructions on the architecturally executed path, where the branch is correctly predicted." units="instructions"/>
    <event event="0x8111" title="Instructions (Executed)" name="Branch (mispredicted immediate branch)" description="The counter counts each instruction counted by both &apos;Instructions (Executed): Branch (Immediate)&apos; and &apos;Instructions (Executed): Branch (Mispredicted)&apos;. These are all direct branch instructions on the architecturally executed path, where the branch is mispredicted." units="instructions"/>
    <event event="0x8112" title="Instructions (Executed)" name="Branch (predicted indirect branch)" description="The counter counts each instruction counted by both &apos;Instructions (Executed): Branch (indirect branch)&apos; and &apos;Instructions (Executed): Branch (predicted branch)&apos;. These are all indirect branch instructions, including return instructions, on the architecturally executed path, where the branch is correctly predicted." units="instructions"/>
    <event event="0x8113" title="Instructions (Executed)" name="Branch (mispredicted indirect branch)" description="The counter counts each instruction counted by both &apos;Instructions (Executed): Branch (indirect branch)&apos; and &apos;Instructions (Executed): Branch (Mispredicted)&apos;. These are all indirect branch instructions, including return instructions, on the architecturally executed path, where the branch is mispredicted." units="instructions"/>
    <event event="0x8114" title="Instructions (Executed)" name="Branch (predicted procedure return)" description="The counter counts each instruction counted by &apos;Instructions (Executed): Branch (predicted indirect branch)&apos; where if taken, the branch would be counted by &apos;Instructions (Executed): Branch (Return)&apos;. These are all return instructions on the architecturally executed path, where the branch is correctly predicted." units="instructions"/>
    <event event="0x8115" title="Instructions (Executed)" name="Branch (mispredicted procedure return)" description="The counter counts each instruction counted by &apos;Instructions (Executed): Branch (mispredicted indirect branch)&apos; where if taken, the branch would also be counted by &apos;Instructions (Executed): Branch (Return)&apos;. These are all return instructions on the architecturally executed path, where the branch is mispredicted." units="instructions"/>
    <event event="0x8116" title="Instructions (Executed)" name="Branch (predicted indirect branch, excluding return)" description="The counter counts each instruction counted by &apos;Instructions (Executed): Branch (predicted indirect branch)&apos; where if taken, the branch would not be counted by &apos;Instructions (Executed): Branch (Return)&apos;. These are all indirect branch instructions, excluding return instructions, on the architecturally executed path, where the branch is correctly predicted." units="instructions"/>
    <event event="0x8117" title="Instructions (Executed)" name="Branch (mispredicted indirect branch, excluding return)" description="The counter counts each instruction counted by &apos;Instructions (Executed): Branch (mispredicted indirect branch)&apos; where if taken, the branch would not be counted by &apos;Instructions (Executed): Branch (Return)&apos;. These are all indirect branch instructions, excluding return instructions, on the architecturally executed path, where the branch is mispredicted." units="instructions"/>
    <event event="0x8118" title="Instructions (Executed)" name="Branch (predicted branch, taken)" description="The counter counts each instruction counted by both &apos;Instructions (Executed): Branch (predicted branch)&apos; and &apos;Instructions (Executed): Write to PC&apos;. These are all branch instructions on the architecturally executed path, where the branch is correctly predicted and taken." units="instructions"/>
    <event event="0x8119" title="Instructions (Executed)" name="Branch (mispredicted branch, taken)" description="The counter counts each instruction counted by both &apos;Instructions (Executed): Branch (Mispredicted)&apos; and &apos;Instructions (Executed): Write to PC&apos;. These are all branch instructions on the architecturally executed path, where the branch is mispredicted and taken." units="instructions"/>
    <event event="0x811a" title="Instructions (Executed)" name="Branch (predicted branch, not taken)" description="The counter counts each instruction counted by both &apos;Instructions (Executed): Branch (predicted branch)&apos; and BR_SKIP_RETIRED. These are all branch instructions on the architecturally executed path, where the branch is correctly predicted and not taken." units="instructions"/>
    <event event="0x811b" title="Instructions (Executed)" name="Branch (mispredicted branch, not taken)" description="The counter counts each instruction counted by both &apos;Instructions (Executed): Branch (Mispredicted)&apos; and BR_SKIP_RETIRED. These are all branch instructions on the architecturally executed path, where the branch is mispredicted and not taken." units="instructions"/>
    <event event="0x811c" title="Instructions (Executed)" name="Branch (predicted branch)" description="The counter counts each instruction counted by &apos;Instructions (Executed): Branch (Any)&apos; that is not counted by &apos;Instructions (Executed): Branch (Mispredicted)&apos;. These are all branch instructions on the architecturally executed path, where the branch is correctly predicted." units="instructions"/>
    <event event="0x811d" title="Instructions (Executed)" name="Branch (indirect branch)" description="The counter counts each Software change of the PC that is not counted by &apos;Instructions (Executed): Branch (Immediate)&apos;. Software change of the PC has the same definition as for the &apos;Instructions (Executed): Write to PC&apos; and BR_SKIP_RETIRED events. Note: conditional branches are always counted, regardless of whether the branch is taken." units="instructions"/>
    <event event="0x811f" title="Branch record buffer" name="Record Captured" description="Counts branch records captured which are not removed by filtering"/>
    <event event="0x8120" title="Event Latency" name="Instruction Fetch" description="Event in progress, &apos;Memory: Access (due to instruction fetch)&apos;" units="cycles"/>
    <event event="0x8121" title="Event Latency" name="Memory (Read)" description="Event in progress, &apos;Memory: Access (due to read)&apos;" units="cycles"/>
    <event event="0x8124" title="Memory" name="Access (due to instruction fetch)" description="Instruction memory access" units="instructions"/>
    <event event="0x8128" title="Event Latency" name="DTLB Walk" description="Event in progress, &apos;Data TLB: Translation table walk&apos;" units="cycles"/>
    <event event="0x8129" title="Event Latency" name="ITLB Walk" description="Event in progress, &apos;Instruction TLB: Translation table walk&apos;" units="cycles"/>
    <event event="0x812a" title="Statistical Profiling" name="Sample Feed (branch)" description="Statistical Profiling sample taken, branch. The counter counts each sample counted by &apos;Statistical Profiling: Sample Feed&apos; that are branch operations."/>
    <event event="0x812b" title="Statistical Profiling" name="Sample Feed (load)" description="Statistical Profiling sample taken, load. The counter counts each sample counted by &apos;Statistical Profiling: Sample Feed&apos; that are load or load atomic operations."/>
    <event event="0x812c" title="Statistical Profiling" name="Sample Feed (store)" description="Statistical Profiling sample taken, store. The counter counts each sample counted by &apos;Statistical Profiling: Sample Feed&apos; that are store or atomic operations, including load atomic operations."/>
    <event event="0x812d" title="Statistical Profiling" name="Sample Feed (matching operation type)" description="Statistical Profiling sample taken, matching operation type. The counter counts each sample counted by &apos;Statistical Profiling: Sample Feed&apos; that meets the operation type filter constraints."/>
    <event event="0x812e" title="Statistical Profiling" name="Sample Feed (matching events)" description="Statistical Profiling sample taken, matching events. The counter counts each sample counted by &apos;Statistical Profiling: Sample Feed&apos; that meets the Events packet filter constraints."/>
    <event event="0x812f" title="Statistical Profiling" name="Sample Feed (exceeding minimum latency)" description="Statistical Profiling sample taken, exceeding minimum latency. The counter counts each sample counted by &apos;Statistical Profiling: Sample Feed&apos; that meets the operation latency filter constraints."/>
    <event event="0x8130" title="L1 Data TLB" name="Access (due to read/write)" description="The counter counts each access counted by &apos;L1 Data TLB: Access&apos; that is due to a demand memory read operation or demand memory write operation"/>
    <event event="0x8131" title="L1 Instruction TLB" name="Access (due to read)" description="The counter counts each access counted by &apos;L1 Instruction TLB: Access&apos; that is due to a demand Instruction memory access"/>
    <event event="0x8132" title="L1 Data TLB" name="Access (by SW preload)" description="The counter counts each access counted by &apos;L1 Data TLB: Access&apos; that is due to a preload or prefetch instruction"/>
    <event event="0x8133" title="L1 Instruction TLB" name="Access (by SW preload)" description="The counter counts each access counted by &apos;L1 Instruction TLB: Access&apos; that is due to a preload or prefetch instruction"/>
    <event event="0x8134" title="Data TLB" name="Hardware update of translation table" description="The counter counts each access counted by &apos;L1 Data TLB: Access&apos; that causes a hardware update of a translation table entry"/>
    <event event="0x8135" title="Instruction TLB" name="Hardware update of translation table" description="The counter counts each access counted by &apos;L1 Instruction TLB: Access&apos; that causes a hardware update of a translation table entry"/>
    <event event="0x8136" title="Data TLB" name="Translation table walk, step" description="The counter counts each translation table walk access made by a refill of the data or unified TLB"/>
    <event event="0x8137" title="Instruction TLB" name="Translation table walk, step" description="The counter counts each translation table walk access made by a refill of the instruction TLB"/>
    <event event="0x8138" title="Data TLB" name="Large page translation table walk" description="The counter counts each translation table walk counted by &apos;Data TLB: Translation table walk&apos; where the result of the walk yields a large page size"/>
    <event event="0x8139" title="Instruction TLB" name="Large page translation table walk" description="The counter counts each translation table walk counted by &apos;Instruction TLB: Translation table walk&apos; where the result of the walk yields a large page size"/>
    <event event="0x813a" title="Data TLB" name="Small page translation table walk" description="The counter counts each translation table walk counted by &apos;Data TLB: Translation table walk&apos; where the result of the walk yields a small page size"/>
    <event event="0x813b" title="Instruction TLB" name="Small page translation table walk" description="The counter counts each translation table walk counted by &apos;Instruction TLB: Translation table walk&apos; where the result of the walk yields a small page size"/>
    <event event="0x813c" title="Data TLB" name="Demand access, at least one table walk" description="Data TLB demand access with at least one translation table walk. The counter counts each demand access counted by &apos;L1 Data TLB: Access (due to read/write)&apos; that causes a refill or update of a data or unified TLB involving at least one translation table walk access."/>
    <event event="0x813d" title="Instruction TLB" name="Demand access (with a translation table walk)" description="The counter counts each demand access counted by &apos;L1 Instruction TLB: Access (due to read)&apos; that causes a refill or update of an instruction TLB involving at least one translation table walk access"/>
    <event event="0x813e" title="Data TLB" name="Software preload access (with a translation table walk)" description="The counter counts each access counted by &apos;L1 Data TLB: Access (by SW preload)&apos; that causes a refill or update of a data or unified TLB involving at least one translation table walk access"/>
    <event event="0x813f" title="Instruction TLB" name="Software preload access (with a translation table walk)" description="The counter counts each access counted by &apos;L1 Instruction TLB: Access (by SW preload)&apos; that causes a refill or update of an instruction TLB involving at least one translation table walk access"/>
    <event event="0x8140" title="L1 Data Cache" name="Access (due to read/write)" description="The counter counts each access counted by &apos;L1 Data Cache: Access&apos; that is due to a demand read or demand write access"/>
    <event event="0x8141" title="L1 Instruction Cache" name="Access (due to read)" description="The counter counts each access counted by &apos;L1 Instruction Cache: Access&apos; that is due to a demand Instruction memory access. This includes instruction prefetches made by the PE for Speculatively executed instructions."/>
    <event event="0x8142" title="L1 Data Cache" name="Access (by SW preload)" description="The counter counts each access counted by &apos;L1 Data Cache: Access&apos; that is due to a preload or prefetch instruction"/>
    <event event="0x8143" title="L1 Instruction Cache" name="Access (by SW preload)" description="The counter counts each access counted by &apos;L1 Instruction Cache: Access&apos; that is due to a preload or prefetch instruction"/>
    <event event="0x8144" title="L1 Data Cache" name="Miss" description="The counter counts each demand access counted by &apos;L1 Data Cache: Access (due to read/write)&apos; that misses in the Level 1 data or unified cache, causing an access to outside of the Level 1 caches of this PE"/>
    <event event="0x8145" title="L1 Instruction Cache" name="Access (by HW prefetcher)" description="The counter counts each access counted by &apos;L1 Instruction Cache: Access&apos; that is due to a hardware prefetch. The hardware prefetch is generated by a hardware prefetcher at the Level 1 instruction or unified cache. The PE might prefetch instructions as part of instruction pipelining, and might do so for Speculatively executed instruction paths. PE instruction prefetching is not counted as hardware prefetching. Unlike PE instruction prefetching, a hardware prefetch only allocates instructions into the cache."/>
    <event event="0x8146" title="L1 Data Cache" name="Refill (by SW preload)" description="The counter counts each access counted by &apos;L1 Data Cache: Access (by SW preload)&apos; that causes a refill of the Level 1 data or unified cache from outside of the Level 1 data or unified cache"/>
    <event event="0x8147" title="L1 Instruction Cache" name="Refill (by SW preload)" description="The counter counts each access counted by &apos;L1 Instruction Cache: Access (by SW preload)&apos; that causes a refill of the Level 1 instruction or unified cache from outside of the Level 1 instruction or unified cache"/>
    <event event="0x8148" title="L2 Data Cache" name="Access (due to read/write)" description="The counter counts each access counted by &apos;L2 Data Cache: Access&apos; that is due to a demand memory read operation or demand memory write operation"/>
    <event event="0x814a" title="L2 Data Cache" name="Access (by SW preload)" description="The counter counts each access counted by &apos;L2 Data Cache: Access&apos; that is due to a preload or prefetch instruction. This includes accesses to the Level 2 data or unified cache due to a refill of another cache caused by a preload or prefetch instruction."/>
    <event event="0x814c" title="L2 Data Cache" name="Miss" description="The counter counts each demand access counted by &apos;L2 Data Cache: Access (due to read/write)&apos; that misses in the Level 1 and Level 2 data or unified caches, causing an access to outside of the Level 1 and Level 2 caches of this PE"/>
    <event event="0x814e" title="L2 Data Cache" name="Refill (by SW preload)" description="The counter counts each access counted by &apos;L2 Data Cache: Access (by SW preload)&apos; that causes a refill of the Level 2 data or unified cache, or any Level 1 data, instruction, or unified cache of this PE, from outside of those caches"/>
    <event event="0x8154" title="L1 Data Cache" name="Access (by HW prefetcher)" description="The counter counts each access counted by &apos;L1 Data Cache: Access&apos; that is due to a hardware prefetch. The hardware prefetch is generated by a hardware prefetcher at the Level 1 data or unified cache."/>
    <event event="0x8155" title="L2 Data Cache" name="Access (by HW prefetcher)" description="The counter counts each access counted by &apos;L2 Data Cache: Access&apos; that is due to a hardware prefetch. The hardware prefetch is generated by a hardware prefetcher at the Level 2 data or unified cache."/>
    <event event="0x8158" title="Stalls" name="Frontend (Memory Bound)" description="The counter counts each cycle counted by &apos;Stalls: Frontend&apos; when no instructions are delivered from the memory system. This includes the cycles counted by &apos;Stalls: Frontend (Level 1 instruction cache)&apos;, &apos;Stalls: Frontend (Last level PE cache or memory)&apos; and &apos;Stalls: Frontend (TLB miss)&apos;." units="cycles"/>
    <event event="0x8159" title="Stalls" name="Frontend (Level 1 instruction cache)" description="The counter counts each cycle counted by &apos;Stalls: Frontend (Memory Bound)&apos; when there is a demand instruction miss in the L1 instruction cache. If the complex is configured with a per-complex L2 cache, this event does not count if &apos;Stalls: Frontend (Last level PE cache or memory)&apos; counts. If the complex is not configured with a per-complex L2 cache, this event is not implemented." units="cycles"/>
    <event event="0x815b" title="Stalls" name="Frontend (Last level PE cache or memory)" description="The counter counts each cycle counted by &apos;Stalls: Frontend (Memory Bound)&apos; when there is a demand instruction miss in the last level of cache within the PE clock domain or a non- cacheable instruction fetch in progress. If the complex is configured with a per-complex L2 cache, this event is based on L2 cache misses. If the complex is not configured with a per-complex L2 cache, this event is based on L1 instruction cache misses." units="cycles"/>
    <event event="0x815c" title="Stalls" name="Frontend (TLB miss)" description="The counter counts each cycle counted by &apos;Stalls: Frontend (Memory Bound)&apos; when there is a demand instruction miss in the instruction or unified TLB" units="cycles"/>
    <event event="0x8160" title="Stalls" name="Frontend (Processor bound)" description="The counter counts each cycle counted by &apos;Stalls: Frontend&apos; when the frontend is stalled on a frontend processor resource, not including memory. This includes the cycles counted by &apos;Stalls: Frontend (Flow control)&apos; and &apos;Stalls: Frontend (Flush recovery)&apos;." units="cycles"/>
    <event event="0x8161" title="Stalls" name="Frontend (Flow control)" description="The counter counts each cycle counted by &apos;Stalls: Frontend (Processor bound)&apos; when the frontend is recovering from a ﬂush" units="cycles"/>
    <event event="0x8162" title="Stalls" name="Frontend (Flush recovery)" description="The counter counts each cycle counted by &apos;Stalls: Frontend (Processor bound)&apos; when the frontend is recovering from a ﬂush" units="cycles"/>
    <event event="0x8164" title="Stalls" name="Backend (Memory bound)" description="The counter counts each cycle counted by &apos;Stalls: Backend&apos; when the backend is waiting for a memory access to complete. This includes the cycles counted by &apos;Stalls: Backend (Level 1 data cache)&apos;, &apos;Stalls: Backend (Memory Stall Cycles)&apos;, &apos;Stalls: Backend (Interlock, Store)&apos; and &apos;Stalls: Backend (TLB)&apos;." units="cycles"/>
    <event event="0x8165" title="Stalls" name="Backend (Level 1 data cache)" description="The counter counts each cycle counted by &apos;Stalls: Backend (Memory bound)&apos; when there is a demand data miss in the L1 data cache. If the complex is configured with a per-complex L2 cache, this event does not count if &apos;Stalls: Backend (Memory Stall Cycles)&apos; counts. If the complex is not configured with a per-complex L2 cache, this event is not implemented." units="cycles"/>
    <event event="0x8166" title="Stalls" name="Backend (Level 2 data cache)" description="Counts cycles when the backend is stalled because there is a pending demand load request in progress in the level 2 data cache" units="cycles"/>
    <event event="0x8167" title="Stalls" name="Backend (TLB)" description="The counter counts each cycle counted by &apos;Stalls: Backend (Memory bound)&apos; when there is a demand data miss in the L1 data TLB" units="cycles"/>
    <event event="0x8168" title="Stalls" name="Backend (Interlock, Store)" description="No operation issued due to the backend, store" units="cycles"/>
    <event event="0x816a" title="Stalls" name="Backend (Processor Bound)" description="The counter counts each cycle counted by &apos;Stalls: Backend&apos; when the backend is stalled on a processor resource, not including memory" units="cycles"/>
    <event event="0x816b" title="Stalls" name="Backend (Backend busy)" description="The counter counts each cycle counted by &apos;Stalls: Backend&apos; when operations are available from the frontend but the backend is not able to accept an operation because an execution unit is busy" units="cycles"/>
    <event event="0x816c" title="Stalls" name="Backend (Interlock)" description="No operation issued due to the backend interlock" units="cycles"/>
    <event event="0x816d" title="Stalls" name="Backend (Rename Full)" description="The counter counts each cycle counted by &apos;Stalls: Backend (Processor Bound)&apos; when operation are available from the frontend but at least one is not ready to be sent to the backend because no rename register is available" units="cycles"/>
    <event event="0x81c0" title="L1 Instruction Cache" name="Hit (due to read)" description="The counter counts each demand fetch counted by &apos;L1 Instruction Cache: Access (due to read)&apos; that hits in the Level 1 instruction or unified cache"/>
    <event event="0x81d0" title="L1 Instruction Cache" name="Hit (by SW preload, due to read, first)" description="The counter counts each demand fetch first hit counted by &apos;L1 Instruction Cache: Hit (due to read)&apos; where the cache line was fetched in response to a preload or prefetch instruction. That is, the &apos;L1 Instruction Cache: Refill (by SW preload)&apos; event was generated when the cache line was fetched into the cache. Only the first hit by a demand access is counted. After this event is generated for a cache line, the event is not generated again for the same cache line while it remains in the cache."/>
    <event event="0x81e0" title="L1 Instruction Cache" name="Hit (by HW prefetcher, due to read, first)" description="The counter counts each demand fetch first hit counted by &apos;L1 Instruction Cache: Hit (due to read)&apos; where the cache line was fetched by a hardware prefetcher. That is, the L1I_CACHE_REFILL_HWPRF event was generated when the cache line was fetched into the cache. Only the first hit by a demand access is counted. After this event is generated for a cache line, the event is not generated again for the same cache line while it remains in the cache."/>
    <event event="0x8200" title="L1 Instruction Cache" name="Hit" description="The counter counts each access counted by &apos;L1 Instruction Cache: Access&apos; that hits in the Level 1 instruction or unified cache"/>
    <event event="0x8208" title="L1 Instruction Cache" name="Hit (by SW preload)" description="The counter counts each software preload counted by &apos;L1 Instruction Cache: Access (by SW preload)&apos; that hits in the Level 1 instruction or unified cache"/>
    <event event="0x8240" title="L1 Instruction Cache" name="Hit (due to read, line-fill buffer)" description="The counter counts each demand access counted by &apos;L1 Instruction Cache: Hit (due to read)&apos; that hits a recently fetched line in the Level 1 instruction or unified cache. That is, the access hits a cache line that is in the process of being loaded into the Level 1 instruction or unified cache, and so does not generate a new refill, but has to wait for the previous refill to complete."/>
    <event event="0x8250" title="L1 Instruction Cache" name="Hit (by SW preload, due to read, first, line-fill buffer)" description="The counter counts each demand fetch line-fill buffer first hit counted by &apos;L1 Instruction Cache: Hit (due to read, line-fill buffer)&apos; where the cache line was fetched in response to a preload or prefetch instruction. That is, the fetch hits a cache line that is in the process of being loaded into the Level 1 instruction or unified cache, and so does not generate a new refill, but has to wait for the previous refill to complete, and the &apos;L1 Instruction Cache: Refill (by SW preload)&apos; event was generated when the cache line was fetched into the cache. Only the first hit by a demand access is counted. After this event is generated for a cache line, the event is not generated again for the same cache line while it remains in the cache."/>
    <event event="0x8260" title="L1 Instruction Cache" name="Hit (by HW prefetcher, due to read, first, line-fill buffer)" description="The counter counts each demand fetch line-fill buffer first hit counted by &apos;L1 Instruction Cache: Hit (due to read, line-fill buffer)&apos; where the cache line was fetched by a hardware prefetcher. That is, the fetch hits a cache line that is in the process of being loaded into the Level 1 instruction or unified cache, and so does not generate a new refill, but has to wait for the previous refill to complete, and the L1I_CACHE_REFILL_HWPRF event was generated when the cache line was fetched into the cache. Only the first hit by a demand access is counted. After this event is generated for a cache line, the event is not generated again for the same cache line while it remains in the cache."/>
</category>
<spe name="Arm Neoverse-V3 Statistical Profiling Extension" id="arm_neoverse_v3_spe_pmu" extends="armv8.7_spe_sve">
    <!-- Define data source packet source types -->
    <data-source index="0x0" name="Level 1 data cache" />
    <data-source index="0x8" name="Level 2 cache" />
    <data-source index="0x9" name="Peer CPU" />
    <data-source index="0xa" name="Local cluster" />
    <data-source index="0xb" name="System cache" />
    <data-source index="0xc" name="Peer cluster" />
    <data-source index="0xd" name="Remote" />
    <data-source index="0xe" name="DRAM" />

    <!-- Define event packet event types -->
    <event bit="12" ratio-label="Late prefetch" set-label="Late" clear-label="Not Late" show-by-default="set"
           name="Late prefetch"
           description="Late prefetch event">
        <valid-op-type class="load-store" sub-class="load" />
    </event>
</spe>
