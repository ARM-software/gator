<counter_set count="4" name="ARMv7_Cortex_A7_cnt"/>
<category counter_set="ARMv7_Cortex_A7_cnt" name="Cortex-A7" per_cpu="yes" supports_event_based_sampling="yes">
    <event counter="ARMv7_Cortex_A7_ccnt" event="0xff" title="Cycles" name="CPU Cycles" description="The counter increments on every cycle." display="hertz" units="Hz" average_selection="yes" average_cores="yes"/>
    <event event="0x0" title="Instructions (Executed)" name="Increment PMSWINC Register" description="The counter increments on writes to the PMSWINC register." units="instructions"/>
    <event event="0x1" title="L1 Instruction Cache" name="Refill" description="The counter counts instruction memory accesses that cause a refill of at least the Level 1 instruction or unified cache. This includes each instruction memory access that causes a refill from outside the cache. It excludes accesses that do not cause a new cache refill but are satisfied from refilling data of a previous miss."/>
    <event event="0x2" title="L1 Instruction TLB" name="Refill" description="The counter counts instruction memory accesses that cause a TLB refill of at least the Level 1 instruction TLB. This includes each instruction memory access that causes an access to a level of memory system due to a translation table walk or an access to another level of TLB caching."/>
    <event event="0x3" title="L1 Data Cache" name="Refill" description="The counter counts each memory-read operation or memory-write operation that causes a refill of at least the Level 1 data or unified cache from outside the Level 1 cache. Each access that causes a new linefill is counted, including those from instructions that generate multiple accesses, such as load or store multiples, and PUSH and POP instructions. In particular, the counter counts accesses to the Level 1 cache that cause a refill that is satisfied by another Level 1 data or unified cache, or a Level 2 cache, or memory."/>
    <event event="0x4" title="L1 Data Cache" name="Access" description="The counter counts each memory-read operation or memory-write operation that causes a cache access to at least the Level 1 data or unified cache. Each access to a cache line is counted including the multiple accesses of instructions, such as LDM or STM . Each access to other Level 1 data or unified memory structures, for example refill buffers, write buffers, and write- back buffers, is also counted."/>
    <event event="0x5" title="L1 Data TLB" name="Refill" description="The counter counts each memory-read operation or memory-write operation that causes a TLB refill of at least the Level 1 data or unified TLB. It counts each read or write that causes a refill, in the form of a translation table walk or an access to another level of TLB caching."/>
    <event event="0x6" title="Instructions (Executed)" name="Load" description="The counter increments for every executed memory-reading instruction." units="instructions"/>
    <event event="0x7" title="Instructions (Executed)" name="Store" description="The counter increments for every executed memory-writing instruction, including SWP. The counter does not increment for a Store-Exclusive instruction that fails." units="instructions"/>
    <event event="0x8" title="Instructions (Executed)" name="All" description="The counter increments for every architecturally executed instruction." units="instructions"/>
    <event event="0x9" title="Exceptions" name="Taken" description="The counter increments for each exception taken. The counter counts only the processor exceptions. It does not count untrapped floating-point exceptions or ThumbEE null checks and index checks." units="exceptions"/>
    <event event="0xa" title="Instructions (Executed)" name="Exception Returns" description="The counter increments for each executed exception return instruction." units="instructions"/>
    <event event="0xb" title="Instructions (Executed)" name="Write to CONTEXTIDR" description="The counter increments for every write to the CONTEXTIDR." units="instructions"/>
    <event event="0xc" title="Instructions (Executed)" name="Write to PC" description="The counter increments for every software change of the PC. This includes all: Branch instructions, memory reading instructions that explicitly write to the PC, Data processing instructions that explicitly write to the PC, and Exception return instructions." units="instructions"/>
    <event event="0xd" title="Instructions (Executed)" name="Branch (Immediate)" description="The counter counts all immediate branch instructions that are architecturally executed." units="instructions"/>
    <event event="0xe" title="Instructions (Executed)" name="Branch (Return)" description="The counter counts all procedure return instructions that are architecturally executed." units="instructions"/>
    <event event="0xf" title="Instructions (Executed)" name="Unaligned Load/Store" description="The counter counts each memory-reading instruction or memory-writing instruction that accesses an unaligned address." units="instructions"/>
    <event event="0x10" title="Branch Predictor" name="Mispredictions" description="The counter counts each correction to the predicted program flow that occurs because of a misprediction from, or no prediction from, the branch prediction resources and that relates to instructions that the branch prediction resources are capable of predicting."/>
    <event event="0x12" title="Branch Predictor" name="Possible Predictions" description="The counter counts every branch or other change in the program flow that the branch prediction resources are capable of predicting."/>
    <event event="0x13" title="Memory" name="Access" description="The counter counts memory-read or memory-write operations that the processor made. The counter increments whether the access results in an access to a Level 1 data or unified cache, a Level 2 data or unified cache, or neither of these."/>
    <event event="0x14" title="L1 Instruction Cache" name="Access" description="The counter counts instruction memory accesses that access at least the Level 1 instruction or unified cache. Each access to other Level 1 instruction memory structures, such as refill buffers, is also counted."/>
    <event event="0x15" title="L1 Data Cache" name="Write-back" description="The counter counts every write-back of data from the Level 1 data or unified cache. The counter counts each write-back that causes data to be written from the Level 1 cache to outside of the Level 1 cache."/>
    <event event="0x16" title="L2 Data Cache" name="Access" description="The counter counts memory-read or memory-write operations, that the processor made, that access at least the Level 2 data or unified cache. Each access to a cache line is counted including refills of and write-backs from the Level 1 data, instruction, or unified caches. Each access to other Level 2 data or unified memory structures , such as refill buffers, write buffers, and write-back buffers, is also counted."/>
    <event event="0x17" title="L2 Data Cache" name="Refill" description="The counter counts memory-read or memory-write operations, that the processor made, that access at least the Level 2 data or unified cache and cause a refill of a Level 1 data , instruction, or unified cache or of the Level 2 data or unified cache. Each read from or write to the cache that causes a refill from outside the Level 1 and Level 2 caches is counted."/>
    <event event="0x18" title="L2 Data Cache" name="Write-back" description="The counter counts every write-back of data from the Level 2 data or unified cache that occurs as a result of an operation by this processor. It counts each write-back that causes data to be written from the Level 2 cache to outside the Level 1 and Level 2 caches."/>
    <event event="0x19" title="Bus" name="Access" description="The counter counts memory-read or memory-write operations that access outside of the boundary of the processor and its closely-coupled caches . Where this boundary lies with respect to any implemented caches is IMPLEMENTATION DEFINED. It must count accesses beyond the cache furthest from the processor for which accesses can be counted."/>
    <event event="0x1d" title="Cycles" name="Bus Cycles" description="The counter increments on every cycle of the external memory interface of the processor."/>
    <event event="0x60" title="Bus" name="Access (due to read)" description="As &apos;Bus: Access&apos;, but counts only memory-read operations that access outside the boundary of the processor and its closely-coupled caches."/>
    <event event="0x61" title="Bus" name="Access (due to write)" description="As &apos;Bus: Access&apos;, but counts only memory-write operations that access outside the boundary of the processor and its closely-coupled caches."/>
    <event event="0x86" title="Exceptions" name="IRQ" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions taken locally that are IRQ or Virtual IRQ exceptions." units="exceptions"/>
    <event event="0x87" title="Exceptions" name="FIQ" description="As &apos;Exceptions: Taken&apos;, but counts only those exceptions taken locally that are FIQ or Virtual FIQ exceptions." units="exceptions"/>
    <event event="0xc0" title="Memory" name="External Request" description="External memory request."/>
    <event event="0xc1" title="External Request (non-cacheable)" name="Memory" description="Non-cacheable external memory request."/>
    <event event="0xc2" title="Data Cache" name="Refill (due to prefetch)" description="Linefill because of prefetch."/>
    <event event="0xc3" title="Data Cache" name="Refill (due to prefetch, dropped)" description="Prefetch linefill dropped."/>
    <event event="0xc4" title="L1 Data Cache" name="Enter Read Allocate Mode" description="Entering read allocate mode."/>
    <event event="0xc5" title="L1 Data Cache" name="Read Allocate Mode" description="Read allocate mode."/>
    <event event="0xc7" title="ETM" name="Ext Out [0]" description="ETM Ext Out[0]."/>
    <event event="0xc8" title="ETM" name="Ext Out [1]" description="ETM Ext Out[1]."/>
    <event event="0xc9" title="Stalls" name="Backend (Interlock, Store, STB full)" description="No operation issued due to the backend, store, STB full." units="cycles"/>
    <event event="0xca" title="Snoop Control Unit" name="Data Snoop" description="SCU Snooped data from another core for this core."/>
</category>
