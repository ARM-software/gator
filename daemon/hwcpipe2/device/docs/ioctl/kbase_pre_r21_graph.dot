digraph G {
    compound=true;
    label="kbase_pre_r21";
    node [shape=box];
    rankdir=LR;

    subgraph cluster_commands {
        node [shape=box, style=filled, fillcolor=lightgrey];

        label="kbase_pre_r21 commands."
        command_version_check [label=version_check];
        command_set_flags [label=set_flags];
        command_get_gpuprops [label=get_gpuprops];
        command_hwcnt_reader_setup [label=hwcnt_reader_setup];
    }

    enum_header_id [label="enum header_id"];
    subgraph cluster_uk_header {
        label="union uk_header"
        graph [style=bold]

        // Invisible node to connect other fields with this type.
        compound_uk_header [style=invis];

        // Inner types defined in this union.

        subgraph cluster_fields_uk_header
        {
            label="Fields";
            uk_header_id [label="header_id id"];
            uk_header_ret [label="uint32_t ret"];
            uk_header_sizer [label="uint64_t sizer"];
        }
    }
    subgraph cluster_version_check_args {
        label="struct version_check_args"
        graph [style=bold]

        // Invisible node to connect other fields with this type.
        compound_version_check_args [style=invis];

        // Inner types defined in this struct.

        subgraph cluster_fields_version_check_args
        {
            label="Fields";
            version_check_args_header [label="uk_header header"];
            version_check_args_major [label="uint16_t major"];
            version_check_args_minor [label="uint16_t minor"];
        }
    }
    subgraph cluster_set_flags_args {
        label="struct set_flags_args"
        graph [style=bold]

        // Invisible node to connect other fields with this type.
        compound_set_flags_args [style=invis];

        // Inner types defined in this struct.

        subgraph cluster_fields_set_flags_args
        {
            label="Fields";
            set_flags_args_header [label="uk_header header"];
            set_flags_args_create_flags [label="uint32_t create_flags"];
            set_flags_args_padding [label="uint32_t padding"];
        }
    }
    subgraph cluster_uk_gpuprops {
        label="struct uk_gpuprops"
        graph [style=bold]

        // Invisible node to connect other fields with this type.
        compound_uk_gpuprops [style=invis];

        // Inner types defined in this struct.
        subgraph cluster_uk_gpuprops_gpu_props {
            label="struct gpu_props"
            graph [style=bold]

            // Invisible node to connect other fields with this type.
            compound_uk_gpuprops_gpu_props [style=invis];

            // Inner types defined in this struct.
            subgraph cluster_uk_gpuprops_gpu_props_core {
                label="struct core"
                graph [style=bold]

                // Invisible node to connect other fields with this type.
                compound_uk_gpuprops_gpu_props_core [style=invis];

                // Inner types defined in this struct.

                subgraph cluster_fields_uk_gpuprops_gpu_props_core
                {
                    label="Fields";
                    uk_gpuprops_gpu_props_core_product_id [label="uint32_t product_id"];
                    uk_gpuprops_gpu_props_core_version_status [label="uint16_t version_status"];
                    uk_gpuprops_gpu_props_core_minor_revision [label="uint16_t minor_revision"];
                    uk_gpuprops_gpu_props_core_major_revision [label="uint16_t major_revision"];
                    uk_gpuprops_gpu_props_core_padding [label="uint16_t padding"];
                    uk_gpuprops_gpu_props_core_gpu_speed_mhz [label="uint32_t gpu_speed_mhz"];
                    uk_gpuprops_gpu_props_core_gpu_freq_khz_max [label="uint32_t gpu_freq_khz_max"];
                    uk_gpuprops_gpu_props_core_gpu_freq_khz_min [label="uint32_t gpu_freq_khz_min"];
                    uk_gpuprops_gpu_props_core_log2_program_counter_size [label="uint32_t log2_program_counter_size"];
                    uk_gpuprops_gpu_props_core_texture_features [label="uint32_t texture_features[base_gpu_num_texture_features_registers]"];
                    uk_gpuprops_gpu_props_core_gpu_available_memory_size [label="uint64_t gpu_available_memory_size"];
                }
            }
            subgraph cluster_uk_gpuprops_gpu_props_l2_cache {
                label="struct l2_cache"
                graph [style=bold]

                // Invisible node to connect other fields with this type.
                compound_uk_gpuprops_gpu_props_l2_cache [style=invis];

                // Inner types defined in this struct.

                subgraph cluster_fields_uk_gpuprops_gpu_props_l2_cache
                {
                    label="Fields";
                    uk_gpuprops_gpu_props_l2_cache_log2_line_size [label="uint8_t log2_line_size"];
                    uk_gpuprops_gpu_props_l2_cache_log2_cache_size [label="uint8_t log2_cache_size"];
                    uk_gpuprops_gpu_props_l2_cache_num_l2_slices [label="uint8_t num_l2_slices"];
                    uk_gpuprops_gpu_props_l2_cache_padding [label="uint8_t padding[5]"];
                }
            }
            subgraph cluster_uk_gpuprops_gpu_props_tiler {
                label="struct tiler"
                graph [style=bold]

                // Invisible node to connect other fields with this type.
                compound_uk_gpuprops_gpu_props_tiler [style=invis];

                // Inner types defined in this struct.

                subgraph cluster_fields_uk_gpuprops_gpu_props_tiler
                {
                    label="Fields";
                    uk_gpuprops_gpu_props_tiler_bin_size_bytes [label="uint32_t bin_size_bytes"];
                    uk_gpuprops_gpu_props_tiler_max_active_levels [label="uint32_t max_active_levels"];
                }
            }
            subgraph cluster_uk_gpuprops_gpu_props_thread {
                label="struct thread"
                graph [style=bold]

                // Invisible node to connect other fields with this type.
                compound_uk_gpuprops_gpu_props_thread [style=invis];

                // Inner types defined in this struct.

                subgraph cluster_fields_uk_gpuprops_gpu_props_thread
                {
                    label="Fields";
                    uk_gpuprops_gpu_props_thread_max_threads [label="uint32_t max_threads"];
                    uk_gpuprops_gpu_props_thread_max_workgroup_size [label="uint32_t max_workgroup_size"];
                    uk_gpuprops_gpu_props_thread_max_barrier_size [label="uint32_t max_barrier_size"];
                    uk_gpuprops_gpu_props_thread_max_registers [label="uint16_t max_registers"];
                    uk_gpuprops_gpu_props_thread_max_task_queue [label="uint8_t max_task_queue"];
                    uk_gpuprops_gpu_props_thread_max_thread_group_split [label="uint8_t max_thread_group_split"];
                    uk_gpuprops_gpu_props_thread_impl_tech [label="uint8_t impl_tech"];
                    uk_gpuprops_gpu_props_thread_padding [label="uint8_t padding[7]"];
                }
            }
            subgraph cluster_uk_gpuprops_gpu_props_raw {
                label="struct raw"
                graph [style=bold]

                // Invisible node to connect other fields with this type.
                compound_uk_gpuprops_gpu_props_raw [style=invis];

                // Inner types defined in this struct.

                subgraph cluster_fields_uk_gpuprops_gpu_props_raw
                {
                    label="Fields";
                    uk_gpuprops_gpu_props_raw_shader_present [label="uint64_t shader_present"];
                    uk_gpuprops_gpu_props_raw_tiler_present [label="uint64_t tiler_present"];
                    uk_gpuprops_gpu_props_raw_l2_present [label="uint64_t l2_present"];
                    uk_gpuprops_gpu_props_raw_unused_1 [label="uint64_t unused_1"];
                    uk_gpuprops_gpu_props_raw_l2_features [label="uint32_t l2_features"];
                    uk_gpuprops_gpu_props_raw_suspend_size [label="uint32_t suspend_size"];
                    uk_gpuprops_gpu_props_raw_mem_features [label="uint32_t mem_features"];
                    uk_gpuprops_gpu_props_raw_mmu_features [label="uint32_t mmu_features"];
                    uk_gpuprops_gpu_props_raw_as_present [label="uint32_t as_present"];
                    uk_gpuprops_gpu_props_raw_js_present [label="uint32_t js_present"];
                    uk_gpuprops_gpu_props_raw_js_features [label="uint32_t js_features[gpu_max_job_slots]"];
                    uk_gpuprops_gpu_props_raw_tiler_features [label="uint32_t tiler_features"];
                    uk_gpuprops_gpu_props_raw_texture_features [label="uint32_t texture_features[3]"];
                    uk_gpuprops_gpu_props_raw_gpu_id [label="uint32_t gpu_id"];
                    uk_gpuprops_gpu_props_raw_thread_max_threads [label="uint32_t thread_max_threads"];
                    uk_gpuprops_gpu_props_raw_thread_max_workgroup_size [label="uint32_t thread_max_workgroup_size"];
                    uk_gpuprops_gpu_props_raw_thread_max_barrier_size [label="uint32_t thread_max_barrier_size"];
                    uk_gpuprops_gpu_props_raw_thread_features [label="uint32_t thread_features"];
                    uk_gpuprops_gpu_props_raw_coherency_mode [label="uint32_t coherency_mode"];
                }
            }
            subgraph cluster_uk_gpuprops_gpu_props_coherent_group_info {
                label="struct coherent_group_info"
                graph [style=bold]

                // Invisible node to connect other fields with this type.
                compound_uk_gpuprops_gpu_props_coherent_group_info [style=invis];

                // Inner types defined in this struct.
                subgraph cluster_uk_gpuprops_gpu_props_coherent_group_info_coherent_group {
                    label="struct coherent_group"
                    graph [style=bold]

                    // Invisible node to connect other fields with this type.
                    compound_uk_gpuprops_gpu_props_coherent_group_info_coherent_group [style=invis];

                    // Inner types defined in this struct.

                    subgraph cluster_fields_uk_gpuprops_gpu_props_coherent_group_info_coherent_group
                    {
                        label="Fields";
                        uk_gpuprops_gpu_props_coherent_group_info_coherent_group_core_mask [label="uint64_t core_mask"];
                        uk_gpuprops_gpu_props_coherent_group_info_coherent_group_num_cores [label="uint16_t num_cores"];
                        uk_gpuprops_gpu_props_coherent_group_info_coherent_group_padding [label="uint16_t padding[3]"];
                    }
                }

                subgraph cluster_fields_uk_gpuprops_gpu_props_coherent_group_info
                {
                    label="Fields";
                    uk_gpuprops_gpu_props_coherent_group_info_num_groups [label="uint32_t num_groups"];
                    uk_gpuprops_gpu_props_coherent_group_info_num_core_groups [label="uint32_t num_core_groups"];
                    uk_gpuprops_gpu_props_coherent_group_info_coherency [label="uint32_t coherency"];
                    uk_gpuprops_gpu_props_coherent_group_info_padding [label="uint32_t padding"];
                    uk_gpuprops_gpu_props_coherent_group_info_group [label="coherent_group group[base_max_coherent_groups]"];
                }
            }

            subgraph cluster_fields_uk_gpuprops_gpu_props
            {
                label="Fields";
                uk_gpuprops_gpu_props_core_props [label="core core_props"];
                uk_gpuprops_gpu_props_l2_props [label="l2_cache l2_props"];
                uk_gpuprops_gpu_props_unused [label="uint64_t unused"];
                uk_gpuprops_gpu_props_tiler_props [label="tiler tiler_props"];
                uk_gpuprops_gpu_props_thread_props [label="thread thread_props"];
                uk_gpuprops_gpu_props_raw_props [label="raw raw_props"];
                uk_gpuprops_gpu_props_coherency_info [label="coherent_group_info coherency_info"];
            }
        }

        subgraph cluster_fields_uk_gpuprops
        {
            label="Fields";
            uk_gpuprops_header [label="uk_header header"];
            uk_gpuprops_props [label="gpu_props props"];
        }
    }
    subgraph cluster_uk_hwcnt_reader_setup {
        label="struct uk_hwcnt_reader_setup"
        graph [style=bold]

        // Invisible node to connect other fields with this type.
        compound_uk_hwcnt_reader_setup [style=invis];

        // Inner types defined in this struct.

        subgraph cluster_fields_uk_hwcnt_reader_setup
        {
            label="Fields";
            uk_hwcnt_reader_setup_header [label="uk_header header"];
            uk_hwcnt_reader_setup_buffer_count [label="uint32_t buffer_count"];
            uk_hwcnt_reader_setup_jm_bm [label="uint32_t jm_bm"];
            uk_hwcnt_reader_setup_shader_bm [label="uint32_t shader_bm"];
            uk_hwcnt_reader_setup_tiler_bm [label="uint32_t tiler_bm"];
            uk_hwcnt_reader_setup_mmu_l2_bm [label="uint32_t mmu_l2_bm"];
            uk_hwcnt_reader_setup_fd [label="int32_t fd"];
        }
    }

    // Edges for uk_header
    uk_header_id -> enum_header_id;
    uk_header_ret -> uint32_t;
    uk_header_sizer -> uint64_t;
    // Edges for version_check_args
    version_check_args_header -> compound_uk_header [lhead=cluster_uk_header];
    version_check_args_major -> uint16_t;
    version_check_args_minor -> uint16_t;
    // Edges for set_flags_args
    set_flags_args_header -> compound_uk_header [lhead=cluster_uk_header];
    set_flags_args_create_flags -> uint32_t;
    set_flags_args_padding -> uint32_t;
    // Edges for uk_gpuprops
    uk_gpuprops_header -> compound_uk_header [lhead=cluster_uk_header];
    uk_gpuprops_props -> compound_uk_gpuprops_gpu_props [lhead=cluster_uk_gpuprops_gpu_props];
    // Edges for uk_gpuprops_gpu_props
    uk_gpuprops_gpu_props_core_props -> compound_uk_gpuprops_gpu_props_core [lhead=cluster_uk_gpuprops_gpu_props_core];
    uk_gpuprops_gpu_props_l2_props -> compound_uk_gpuprops_gpu_props_l2_cache [lhead=cluster_uk_gpuprops_gpu_props_l2_cache];
    uk_gpuprops_gpu_props_unused -> uint64_t;
    uk_gpuprops_gpu_props_tiler_props -> compound_uk_gpuprops_gpu_props_tiler [lhead=cluster_uk_gpuprops_gpu_props_tiler];
    uk_gpuprops_gpu_props_thread_props -> compound_uk_gpuprops_gpu_props_thread [lhead=cluster_uk_gpuprops_gpu_props_thread];
    uk_gpuprops_gpu_props_raw_props -> compound_uk_gpuprops_gpu_props_raw [lhead=cluster_uk_gpuprops_gpu_props_raw];
    uk_gpuprops_gpu_props_coherency_info -> compound_uk_gpuprops_gpu_props_coherent_group_info [lhead=cluster_uk_gpuprops_gpu_props_coherent_group_info];
    // Edges for uk_gpuprops_gpu_props_core
    uk_gpuprops_gpu_props_core_product_id -> uint32_t;
    uk_gpuprops_gpu_props_core_version_status -> uint16_t;
    uk_gpuprops_gpu_props_core_minor_revision -> uint16_t;
    uk_gpuprops_gpu_props_core_major_revision -> uint16_t;
    uk_gpuprops_gpu_props_core_padding -> uint16_t;
    uk_gpuprops_gpu_props_core_gpu_speed_mhz -> uint32_t;
    uk_gpuprops_gpu_props_core_gpu_freq_khz_max -> uint32_t;
    uk_gpuprops_gpu_props_core_gpu_freq_khz_min -> uint32_t;
    uk_gpuprops_gpu_props_core_log2_program_counter_size -> uint32_t;
    uk_gpuprops_gpu_props_core_texture_features -> uint32_t;
    uk_gpuprops_gpu_props_core_gpu_available_memory_size -> uint64_t;
    // Edges for uk_gpuprops_gpu_props_l2_cache
    uk_gpuprops_gpu_props_l2_cache_log2_line_size -> uint8_t;
    uk_gpuprops_gpu_props_l2_cache_log2_cache_size -> uint8_t;
    uk_gpuprops_gpu_props_l2_cache_num_l2_slices -> uint8_t;
    uk_gpuprops_gpu_props_l2_cache_padding -> uint8_t;
    // Edges for uk_gpuprops_gpu_props_tiler
    uk_gpuprops_gpu_props_tiler_bin_size_bytes -> uint32_t;
    uk_gpuprops_gpu_props_tiler_max_active_levels -> uint32_t;
    // Edges for uk_gpuprops_gpu_props_thread
    uk_gpuprops_gpu_props_thread_max_threads -> uint32_t;
    uk_gpuprops_gpu_props_thread_max_workgroup_size -> uint32_t;
    uk_gpuprops_gpu_props_thread_max_barrier_size -> uint32_t;
    uk_gpuprops_gpu_props_thread_max_registers -> uint16_t;
    uk_gpuprops_gpu_props_thread_max_task_queue -> uint8_t;
    uk_gpuprops_gpu_props_thread_max_thread_group_split -> uint8_t;
    uk_gpuprops_gpu_props_thread_impl_tech -> uint8_t;
    uk_gpuprops_gpu_props_thread_padding -> uint8_t;
    // Edges for uk_gpuprops_gpu_props_raw
    uk_gpuprops_gpu_props_raw_shader_present -> uint64_t;
    uk_gpuprops_gpu_props_raw_tiler_present -> uint64_t;
    uk_gpuprops_gpu_props_raw_l2_present -> uint64_t;
    uk_gpuprops_gpu_props_raw_unused_1 -> uint64_t;
    uk_gpuprops_gpu_props_raw_l2_features -> uint32_t;
    uk_gpuprops_gpu_props_raw_suspend_size -> uint32_t;
    uk_gpuprops_gpu_props_raw_mem_features -> uint32_t;
    uk_gpuprops_gpu_props_raw_mmu_features -> uint32_t;
    uk_gpuprops_gpu_props_raw_as_present -> uint32_t;
    uk_gpuprops_gpu_props_raw_js_present -> uint32_t;
    uk_gpuprops_gpu_props_raw_js_features -> uint32_t;
    uk_gpuprops_gpu_props_raw_tiler_features -> uint32_t;
    uk_gpuprops_gpu_props_raw_texture_features -> uint32_t;
    uk_gpuprops_gpu_props_raw_gpu_id -> uint32_t;
    uk_gpuprops_gpu_props_raw_thread_max_threads -> uint32_t;
    uk_gpuprops_gpu_props_raw_thread_max_workgroup_size -> uint32_t;
    uk_gpuprops_gpu_props_raw_thread_max_barrier_size -> uint32_t;
    uk_gpuprops_gpu_props_raw_thread_features -> uint32_t;
    uk_gpuprops_gpu_props_raw_coherency_mode -> uint32_t;
    // Edges for uk_gpuprops_gpu_props_coherent_group_info
    uk_gpuprops_gpu_props_coherent_group_info_num_groups -> uint32_t;
    uk_gpuprops_gpu_props_coherent_group_info_num_core_groups -> uint32_t;
    uk_gpuprops_gpu_props_coherent_group_info_coherency -> uint32_t;
    uk_gpuprops_gpu_props_coherent_group_info_padding -> uint32_t;
    uk_gpuprops_gpu_props_coherent_group_info_group -> coherent_group;
    // Edges for uk_gpuprops_gpu_props_coherent_group_info_coherent_group
    uk_gpuprops_gpu_props_coherent_group_info_coherent_group_core_mask -> uint64_t;
    uk_gpuprops_gpu_props_coherent_group_info_coherent_group_num_cores -> uint16_t;
    uk_gpuprops_gpu_props_coherent_group_info_coherent_group_padding -> uint16_t;
    // Edges for uk_hwcnt_reader_setup
    uk_hwcnt_reader_setup_header -> compound_uk_header [lhead=cluster_uk_header];
    uk_hwcnt_reader_setup_buffer_count -> uint32_t;
    uk_hwcnt_reader_setup_jm_bm -> uint32_t;
    uk_hwcnt_reader_setup_shader_bm -> uint32_t;
    uk_hwcnt_reader_setup_tiler_bm -> uint32_t;
    uk_hwcnt_reader_setup_mmu_l2_bm -> uint32_t;
    uk_hwcnt_reader_setup_fd -> int32_t;

    command_version_check -> compound_version_check_args [lhead=cluster_version_check_args];
    command_set_flags -> compound_set_flags_args [lhead=cluster_set_flags_args];
    command_get_gpuprops -> compound_uk_gpuprops [lhead=cluster_uk_gpuprops];
    command_hwcnt_reader_setup -> compound_uk_hwcnt_reader_setup [lhead=cluster_uk_hwcnt_reader_setup];
}
